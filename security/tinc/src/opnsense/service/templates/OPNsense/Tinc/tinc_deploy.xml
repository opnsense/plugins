<networks>
{% if helpers.exists('OPNsense.Tinc.networks.network') %}
{%   for network in helpers.toList('OPNsense.Tinc.networks.network', 'id') %}
{%     if network.enabled|default('0') == '1' %}
    <network>
        <id>{{network.id}}</id>
        <mode>{{network.mode}}</mode>
        <PMTUDiscovery>{{network.PMTUDiscovery}}</PMTUDiscovery>
        <hostname>{{network.hostname}}</hostname>
        <network>{{network.name}}</network>
        <intaddress>{{network.intaddress}}</intaddress>
        <privkey><![CDATA[{{network.privkey}}]]></privkey>
        <address>{{network.intaddress}}</address>
        <port>{{network.extport}}</port>
        <debuglevel>{{network.debuglevel}}</debuglevel>
        <pingtimeout>{{network.pingtimeout}}</pingtimeout>
        <hosts>
            <host>
                <hostname>{{network.hostname}}</hostname>
                <network>{{network.name}}</network>
                <address>{{network.extaddress}}</address>
                <port>{{network.extport}}</port>
                <subnet>{{network.subnet}}</subnet>
                <pubkey><![CDATA[{{network.pubkey}}]]></pubkey>
                <cipher>{{network.cipher}}</cipher>
                <connectto>0</connectto>
            </host>
{%       for host in helpers.toList('OPNsense.Tinc.hosts.host', 'hostname') %}
{%          if helpers.getUUID(host.network).id == network.id %}
            <host>
                <hostname>{{host.hostname}}</hostname>
                <network>{{network.name}}</network>
                <address>{{host.extaddress}}</address>
                <port>{{host.extport}}</port>
                <subnet>{{host.subnet}}</subnet>
                <pubkey><![CDATA[{{host.pubkey}}]]></pubkey>
                <cipher>{{host.cipher}}</cipher>
                <connectto>{{host.connectTo}}</connectto>
            </host>
{%          endif %}
{%       endfor %}
        </hosts>
    </network>
{%     endif %}
{%   endfor %}
{% endif %}
</networks>
