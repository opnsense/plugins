<form>
    <field>
        <id>acmeclient.settings.enabled</id>
        <label>Enable Plugin</label>
        <type>checkbox</type>
        <help><![CDATA[Enable Let's Encrypt plugin.]]></help>
    </field>
    <field>
        <id>acmeclient.settings.autoRenewal</id>
        <label>Auto Renewal</label>
        <type>checkbox</type>
        <help><![CDATA[Enable automatic renewal for certificates to prevent expiration. This will add a cron job to the system. You may want to customize the cron job schedule to your needs, because re-issueing a certificate may lead to a short downtime, depending on the selected challenge type and service.]]></help>
    </field>
    <field>
        <id>acmeclient.settings.environment</id>
        <label>Let's Encrypt Environment</label>
        <type>dropdown</type>
        <help><![CDATA[Choose Let's Encrypts staging environment when using it for the first time or while testing new challenge types. The staging environment offers <a href="https://letsencrypt.org/docs/staging-environment/">relaxed rate limits</a>.<br/><div class="text-info"><b>NOTE:</b>Certificates signed by the staging environment are NOT valid. You need to forcefully re-sign (or delete and re-create) them after switching from staging to production environment.</div>]]></help>
    </field>
    <field>
        <id>acmeclient.settings.haproxyIntegration</id>
        <label>HAProxy Integration</label>
        <type>checkbox</type>
        <help><![CDATA[Enable automatic integration with the OPNsense HAProxy plugin. <b>Requires that the OPNsense HAProxy plugin is installed.</b> This will automatically add the required backend, server, action and ACL for you. You just need to select your HAProxy frontend when configuration the certificate or challenge type. <div class="text-info"><b>NOTE:</b>This will only work for HTTP-01 validation and HAProxy frontends running in <i>http</i> mode; TCP frontends are not supported.</div>]]></help>
    </field>
    <field>
        <id>acmeclient.settings.logLevel</id>
        <label>Log Level</label>
        <type>dropdown</type>
        <help><![CDATA[Specifies the log level for acme.sh, default is "normal". All other log levels add information for debug purposes, but be aware that this will break the log formatting in the GUI.  Levels "debug 2" and "debug 3" log successively deeper log messages from the acme.sh including messages from DNS-01 DNSAPI scripts.]]></help>
    </field>
    <field>
        <id>acmeclient.settings.challengePort</id>
        <label>Local HTTP Port</label>
        <type>text</type>
        <help><![CDATA[When using HTTP-01 as challenge type, a local webserver is used to provide acme challenge data to the Let's Encrypt servers. The local webserver is NOT directly exposed to the outside and should NOT use port 80 or any other well-known port. This setting allows you to change the local port of this webserver in case it interferes with another local service. Defaults to port 43580.]]></help>
        <advanced>true</advanced>
    </field>
    <field>
        <id>acmeclient.settings.restartTimeout</id>
        <label>Automation Timeout</label>
        <type>text</type>
        <help><![CDATA[The maximum time in seconds to wait for an automation to complete. When the timeout is reached the command is forcefully aborted. Defaults to 600 seconds.]]></help>
        <advanced>true</advanced>
    </field>
</form>
