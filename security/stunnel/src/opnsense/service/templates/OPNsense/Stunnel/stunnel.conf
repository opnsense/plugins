setuid = stunnel
setgid = stunnel
{% if not helpers.empty('OPNsense.Stunnel.general.chroot') %}
chroot = /var/run/stunnel
{% endif %}
pid = {% if helpers.empty('OPNsense.Stunnel.general.chroot') %}/var/run/stunnel{% endif %}/stunnel.pid
debug = info
logId = unique


{% if helpers.exists('OPNsense.Stunnel.services.service') %}
{%   for service in helpers.toList('OPNsense.Stunnel.services.service') %}
{%     if service.enabled|default('0') == '1' %}


; **************************************************************************
; * {{ service.description }}
; **************************************************************************
[{{service['@uuid']}}]
accept = {% if service.accept_address %}{{service.accept_address}}:{% endif %}{{service.accept_port}}
connect = {% if service.connect_address.find(":") > -1 %}[{{service.connect_address}}]{% else %}{{service.connect_address}}{% endif %}:{{service.connect_port}}
{% if service.protocol %}
protocol = {{service.protocol}}
{% endif %}
cert = /usr/local/etc/stunnel/certs/{{service['@uuid']}}.crt
{%       if service.cacert|default('') != '' %}
CAfile = /usr/local/etc/stunnel/certs/{{service['@uuid']}}.ca
requireCert = yes
verifyChain = yes
{%         if service.enableCRL|default('0') == '1' %}
CRLpath = {% if helpers.empty('OPNsense.Stunnel.general.chroot') %}/var/run/stunnel{% endif %}/certs/
{%         endif %}
{%       endif %}
{% if service.clientmode|default('0') == '1' %}
client = yes
{% endif %}
{%       set ciphers =[] %}
{%       set ciphersuites =[] %}
{%       for cipher in service.ciphers.split(',') %}
{%         if cipher.startswith('TLS') %}
{%           do ciphersuites.append(cipher) %}
{%         else %}
{%           do ciphers.append(cipher) %}
{%         endif %}
{%       endfor %}
ciphers = {{ ciphers|join(':') }}
ciphersuites = {{ ciphersuites|join(':') }}
sslVersionMin=TLSv1.2
sslVersionMax={% if ciphersuites %}TLSv1.3{% else %}TLSv1.2{% endif %}
{%     endif %}
{%   endfor %}
{% endif %}
