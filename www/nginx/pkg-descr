NGINX is a high performance edge web server with the lowest memory footprint
and the key features to build modern and efficient web infrastructure.

NGINX functionality includes HTTP server, HTTP and mail reverse proxy, caching,
load balancing, compression, request throttling, connection multiplexing and
reuse, SSL offload and HTTP media streaming.

Plugin Changelog
================

1.5

* Add proxy options for ignore client abort and disabling buffering

1.4 (Development only)

* move upstreams from HTTP to their own menu because they are used for TCP load balancing as well
* add TCP load balancing [1]
* add support for IP based ACLs
* add log rotation (contributed by Julius Cesar Camargo [2]
* add support for satisfy, body size limitation
* change: allow to disable internal bot protection (contributed by @fzoske) [3]
* change: do not save when no change in the list happened to prevent filling the log history
* fix: translate a german string in upstream server to english
* replace headers instead of just adding our own (duplication issue #971), suppress X-Powered-By from Upstream [4]

[1] https://github.com/opnsense/plugins/pull/930
[2] https://github.com/opnsense/plugins/pull/982
[3] https://github.com/opnsense/plugins/pull/934
[4] https://github.com/opnsense/plugins/issues/971

1.3

* bugfix: correctly set upstream header

1.2

* add limiter support
* add permanent ban feature (use alias in firewall rules)
* add caching feature (local file system)
* add path prefix support (contributed by @ccesario )
* add port to upstream server table
* add support to download waf rules
* improvement: export full chain instead of only the server certificate (fixes some issues with some tools which need it)
* web interface (allow HTTP/2 server push to increase performance)
* support for (secure) web sockets in reverse proxy mode
* bugfix: fix issues with multiple hostnames (IPv6 issues with TLS SNI by @ccesario )
* bugfix: warning in certificate rendering

1.1

* add log viewer

1.0

* add Reverse Proxy (Load Balancer)
* add Location Configuration
* add local HTTP Server
* add local PHP support
* add experimental support to handle the web interface (can only be enabled via CLI)
* add WAF (NAXSI) support
* add Authentication support

WWW: https://nginx.org/
