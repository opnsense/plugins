{% macro naxsi_mzhelper(mz_helper_rule) -%}
{%   set mz_matches = [] %}
{%   set rx_suffix = '' %}
{%   if mz_helper_rule.regex is defined and mz_helper_rule.regex == '1' %}
{%     set rx_suffix = '_X' %}
{%   endif %}
{%   if mz_helper_rule.body == '1' %}
{%     do mz_matches.append('BODY')  %}
{%   endif %}
{%   if mz_helper_rule.args == '1' %}
{%     do mz_matches.append('ARGS')  %}
{%   endif %}
{%   if mz_helper_rule.url == '1' %}
{%     do mz_matches.append('URL')  %}
{%   endif %}
{%   if mz_helper_rule.headers == '1' %}
{%     do mz_matches.append('HEADERS')  %}
{%   endif %}
{%   if mz_helper_rule.name == '1' %}
{%     if mz_matches|length > 0 %}
{%       do mz_matches.append('NAME')  %}
{%     endif %}
{%   endif %}
{%   if mz_helper_rule.raw_body == '1' %}
{%     do mz_matches.append('RAW_BODY')  %}
{%   endif %}
{%   if mz_helper_rule.file_extension == '1' %}
{%     do mz_matches.append('FILE_EXT')  %}
{%   endif %}
{%   if mz_helper_rule.dollar_body_var is defined and mz_helper_rule.dollar_body_var != '' %}
{%     do mz_matches.append('$BODY_VAR' + rx_suffix + ':' + mz_helper_rule.dollar_body_var)  %}
{%   endif %}
{%   if mz_helper_rule.dollar_args_var is defined and mz_helper_rule.dollar_args_var != '' %}
{#     in case of regex, we cannot use args_var -> https://github.com/nbs-system/naxsi/wiki/matchzones-bnf#match-zone #}
{%     if mz_helper_rule.url is defined and mz_helper_rule.url != '' %}
{%       do mz_matches.append('$ARGS_VAR' + rx_suffix + ':' + mz_helper_rule.dollar_args_var) %}
{%     endif %}
{%   endif %}
{%   if mz_helper_rule.dollar_headers_var is defined and mz_helper_rule.dollar_headers_var != '' %}
{%     do mz_matches.append('$HEADERS_VAR' + rx_suffix +':' + mz_helper_rule.dollar_headers_var)  %}
{%   endif %}
{%   if mz_helper_rule.dollar_url is defined and mz_helper_rule.dollar_url != '' %}
{%     do mz_matches.insert(0,'$URL' + rx_suffix +':' + mz_helper_rule.dollar_url)  %}
{%   endif %}
{{ mz_matches|join('|') }}
{%- endmacro %}
{% macro naxsi_rule(uuid, rule, ruletype) -%}
{%   if rule.match_type == 'id' %}
    {{ ruletype }}{% if rule.negate is defined and rule.negate == '1' %} negative{% endif
    %} id:{{ rule.identifier }} "{% if rule.regex == '1' %}rx{% else %}str{% endif
    %}:{{ rule.match_value }}" "msg:{{ rule.message }}" "mz:{{ naxsi_mzhelper(rule)
    }}" "s:$policy{{ uuid.replace('-', '') }}:{{ rule.score }}";
{%   elif rule.match_type == 'wl' %}
    {{ ruletype }} wl:{{ rule.identifier }}{% if naxsi_mzhelper(rule) != '' %} "mz:{{ naxsi_mzhelper(rule) }}"{% endif %};
{%   endif %}
{%- endmacro %}
{% if naxsi_ruletype == 'basic' %}
{# current policy in loop is available as custom_policy, the uuid as custom_policy_uuid #}
{%   if custom_policy.naxsi_rules is defined %}
{%     for naxsi_rule_uuid in custom_policy.naxsi_rules.split(',') %}
{%       if naxsi_rule_uuid not in added_policies %}
{%         set basic_rule = helpers.getUUID(naxsi_rule_uuid) %}
{%         if basic_rule.ruletype == 'basic' %}
{{           naxsi_rule(custom_policy_uuid, basic_rule, "BasicRule") }}
{%           do added_policies.append(naxsi_rule_uuid) %}
{%         endif %}
{%       endif %}
{%     endfor %}
{%   endif %}
{% endif %}
{% if naxsi_ruletype == 'main' %}
{{   naxsi_rule(custom_policy_uuid, main_rule, "MainRule") }}
{% endif %}
