{% if security_rule.referrer is defined %}
{% do our_headers.append('Referrer-Policy') %}
    add_header Referrer-Policy "{{ security_rule.referrer }}" always;
{% endif %}
{% if security_rule.xssprotection is defined %}
{% do our_headers.append('X-XSS-Protection') %}
    add_header X-XSS-Protection "{{ security_rule.xssprotection }}" always;
{% endif %}
{% if security_rule.content_type_options is defined and security_rule.content_type_options == '1' %}
{% do our_headers.append('X-Content-Type-Options') %}
    add_header X-Content-Type-Options "nosniff" always;
{% endif %}
{% if security_rule.strict_transport_security_time is defined %}
{% do our_headers.append('Strict-Transport-Security') %}
    add_header Strict-Transport-Security "{{ security_rule.strict_transport_security_time }}{%
  if security_rule.strict_transport_security_include_subdomains is defined and
     security_rule.strict_transport_security_include_subdomains == '1' %}; includeSubDomains{% endif %}" always;
{% endif %}
{% if security_rule.hpkp_keys is defined and security_rule.hpkp_time is defined %}
{% do our_headers.append('Public-Key-Pins') %}
{% do our_headers.append('Public-Key-Pins-Report-Only') %}
    add_header Public-Key-Pins{% if security_rule.hpkp_report_only is defined and security_rule.hpkp_report_only == '1'
  %}-Report-Only{% endif %} "{% for key in security_rule.hpkp_keys.split(',')
  %}pin-sha256={{ key }}; {% endfor %}max-age={{ security_rule.hpkp_time }}{%
  if security_rule.hpkp_include_subdomains is defined and
     security_rule.hpkp_include_subdomains == '1' %}; includeSubDomains{% endif %}" always;
{% endif %}
{% if security_rule.enable_csp is defined and security_rule.enable_csp == '1' %}
{% set hash_csp = {} %}
{%   for csp_category in ['default-src', 'script-src', 'img-src', 'style-src', 'media-src', 'font-src', 'form-action'] %}
{%     set prefix = 'csp_' + csp_category.replace('-', '_') + '_' %}
{%     if security_rule[prefix + 'enabled'] == '1' %}
{%       set current_list = [] %}
{%       if security_rule[prefix + 'none'] is defined and security_rule[prefix + 'none'] == '1' %}
{%         do current_list.append("'none'") %}
{%       else %}
{%         if security_rule[prefix + 'data_urls'] is defined and security_rule[prefix + 'data_urls'] == '1' %}
{%           do current_list.append('data:') %}
{%         endif %}
{%         if security_rule[prefix + 'inline'] is defined and security_rule[prefix + 'inline'] == '1' %}
{%           do current_list.append("'unsafe-inline'") %}
{%         endif %}
{%         if security_rule[prefix + 'eval'] is defined and security_rule[prefix + 'eval'] == '1' %}
{%           do current_list.append("'unsafe-eval'") %}
{%         endif %}
{%         if security_rule[prefix + 'self'] is defined and security_rule[prefix + 'self'] == '1' %}
{%           do current_list.append("'self'") %}
{%         endif %}
{%         if security_rule[prefix + 'blob'] is defined and security_rule[prefix + 'blob'] == '1' %}
{%           do current_list.append("blob:") %}
{%         endif %}
{%         if security_rule[prefix + 'mediastream'] is defined and security_rule[prefix + 'mediastream'] == '1' %}
{%           do current_list.append("mediastream:") %}
{%         endif %}
{%         if security_rule[prefix + 'filesystem'] is defined and security_rule[prefix + 'filesystem'] == '1' %}
{%           do current_list.append("filesystem:") %}
{%         endif %}
{%         if security_rule[prefix + 'http_urls'] is defined and security_rule[prefix + 'http_urls'] != '' %}
{%           do current_list.append(security_rule[prefix + 'http_urls'].replace(',', ' ')) %}
{%         endif %}
{%       endif %}
{%       if current_list|length > 0 %}
{#         only append non-empty #}
{%         do hash_csp.update({csp_category: current_list}) %}
{%       endif %}
{%     endif %}
{%   endfor %}
{% do our_headers.append('Content-Security-Policy') %}
{% do our_headers.append('Content-Security-Policy-Report-Only') %}
    add_header Content-Security-Policy{% if security_rule.csp_report_only is defined and security_rule.csp_report_only == '1' %}-Report-Only{% endif %} "{%
    for key, value in hash_csp.items() %}{{ key }} {{ value|join(' ') }}; {% endfor %}{#
    #} report-uri /opnsense-report-csp-violation" always;
{% endif %}
