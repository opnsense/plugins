<form>
  <field>
    <id>streamserver.listen_address</id>
    <label>Listen Address</label>
    <allownew>true</allownew>
    <style>tokenize</style>
    <type>select_multiple</type>
    <help>Enter a list of IP addresses and ports which can be used in nginx listen directives. To listen on a port on all IPs, use for example "22,[::]:22"</help>
  </field>
  <field>
    <id>streamserver.udp</id>
    <label>UDP Port</label>
    <type>checkbox</type>
  </field>
  <field>
    <id>streamserver.syslog_targets</id>
    <label>SYSLOG targets</label>
    <type>select_multiple</type>
    <style>selectpicker</style>
    <advanced>true</advanced>
  </field>
  <field>
    <id>streamserver.proxy_protocol</id>
    <label>PROXY Protocol</label>
    <type>checkbox</type>
    <help>If you enable the proxy protocol, a downstream proxy can send the client IP and port before the real traffic is set.</help>
  </field>
  <field>
    <id>streamserver.trusted_proxies</id>
    <label>Trusted Proxies</label>
    <allownew>true</allownew>
    <style>tokenize</style>
    <type>select_multiple</type>
    <advanced>true</advanced>
    <help>Enter a list of IP addresses or CIDR networks which are allowed to override the source IP address using the specified header.</help>
  </field>
  <field>
    <id>streamserver.proxy_responses</id>
    <label>Proxy Responses (UDP)</label>
    <type>text</type>
    <advanced>true</advanced>
    <help>Due to the nature of UDP, nginx cannot know, when the communication ends and this helps as it tells nginx the number of datagrams the communication is expected to last on server side and it is expected to be closed afterwards. If you enter 0, it is expected, that the server never responds to a datagram. If nginx gets a datagram, it will still get forwarded to the client. Setting this option might be useful in (mostly) unidirectional communication as well.</help>
  </field>
  <field>
    <id>streamserver.certificate</id>
    <label>TLS Certificate</label>
    <type>dropdown</type>
  </field>
  <field>
    <id>streamserver.ca</id>
    <label>CA Certificate</label>
    <type>dropdown</type>
  </field>
  <field>
    <id>streamserver.verify_client</id>
    <label>Verify Client Certificate</label>
    <type>dropdown</type>
    <advanced>true</advanced>
    <help><![CDATA[<ul><li>On: the certificate is requested and validated. Use this option to protect a service with TLS authentication.</li><li>Off: The certificate is not requested. Choose this option for a normal website.</li><li>Optional: The certificate is requested and validated if existing. Choose this option for websites, with TLS login support or mixed TLS protected API and web content.</li><li>Optional, don't verify: Do accept the certificate and let the application choose what to do. Choose this option, for the same reasons as optional but in this case, the request is passed to the backend without rejecting untrusted certificates.</li></ul>]]></help>
  </field>
  <field>
    <id>streamserver.access_log_format</id>
    <label>Access Log Format</label>
    <type>dropdown</type>
  </field>
  <field>
    <id>streamserver.error_log_level</id>
    <label>Error Log Level</label>
    <style>selectpicker</style>
    <type>dropdown</type>
    <help>Select Error Log Level. Log levels are listed in the order of increasing verbosity. Setting a certain log level will cause all messages of the specified and more severe log levels to be logged.</help>
    <advanced>true</advanced>
  </field>
  <field>
    <id>streamserver.route_field</id>
    <label>Route With</label>
    <type>dropdown</type>
    <style>selectpicker</style>
  </field>
  <field>
    <id>streamserver.upstream</id>
    <label>Upstream Servers</label>
    <type>dropdown</type>
    <style>selectpicker</style>
    <help>Select an upstream to proxy to.</help>
  </field>
  <field>
    <id>streamserver.sni_upstream_map</id>
    <label>SNI Upstream Mapping</label>
    <type>dropdown</type>
    <style>selectpicker</style>
    <help>Select an upstream map to choose the host based on the name given by the client.</help>
  </field>
  <field>
    <id>streamserver.ip_acl</id>
    <label>IP ACL</label>
    <type>dropdown</type>
    <style>selectpicker</style>
    <help>If you select an IP ACL, the client can only access this service if it fulfills this requirement.</help>
  </field>
</form>
