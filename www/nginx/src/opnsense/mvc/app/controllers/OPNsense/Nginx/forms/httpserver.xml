<form>
  <field>
    <id>httpserver.listen_http_port</id>
    <label>HTTP Listen Port</label>
    <type>text</type>
  </field>
  <field>
    <id>httpserver.listen_https_port</id>
    <label>HTTPS Listen Port</label>
    <type>text</type>
  </field>
  <field>
    <id>httpserver.servername</id>
    <label>Server Name</label>
    <allownew>true</allownew>
    <style>tokenize</style>
    <type>select_multiple</type>
  </field>
  <field>
    <id>httpserver.locations</id>
    <label>Locations</label>
    <style>selectpicker</style>
    <type>select_multiple</type>
  </field>
  <field>
    <id>httpserver.rewrites</id>
    <label>URL Rewriting</label>
    <type>select_multiple</type>
    <style>selectpicker</style>
    <help>Choose URL rewriting rules.</help>
  </field>
  <field>
    <id>httpserver.root</id>
    <label>File System Root</label>
    <type>text</type>
  </field>
  <field>
    <id>httpserver.certificate</id>
    <label>TLS Certificate</label>
    <type>dropdown</type>
  </field>
  <field>
    <id>httpserver.ca</id>
    <label>CA Certificate</label>
    <type>dropdown</type>
  </field>
  <field>
    <id>httpserver.verify_client</id>
    <label>Verify Client Certificate</label>
    <type>dropdown</type>
    <help><![CDATA[<ul><li>On: the certificate is requested and validated. Use this option to protect a service with TLS authentication.</li><li>Off: The certificate is not requested. Choose this option for a normal website.</li><li>Optional: The certificate is requested and validated if existing. Choose this option for websites, with TLS login support or mixed TLS protected API and web content.</li><li>Optional, don't verify: Do accept the certificate and let the application choose what to do. Choose this option, for the same reasons as optional but in this case, the request is passed to the backend without rejecting untrusted certificates.</li></ul>]]></help>
  </field>
  <field>
    <id>httpserver.access_log_format</id>
    <label>Access Log Format</label>
    <type>dropdown</type>
  </field>
  <field>
    <id>httpserver.enable_acme_support</id>
    <label>Enable Let's Encrypt Plugin Support</label>
    <type>checkbox</type>
  </field>
  <field>
    <id>httpserver.charset</id>
    <label>Charset</label>
    <type>dropdown</type>
  </field>
  <field>
    <id>httpserver.https_only</id>
    <label>HTTPS Only</label>
    <type>checkbox</type>
    <help>If you check this box, a TLS encrypted connection is enforced.</help>
  </field>
  <field>
    <id>httpserver.block_nonpublic_data</id>
    <label>Block Configuration Files</label>
    <type>checkbox</type>
    <help>Blocks files like .htaccess files or other files not intended for the public.</help>
  </field>
  <field>
    <id>httpserver.naxsi_extensive_log</id>
    <label>Extensive Naxsi Log</label>
    <type>checkbox</type>
    <help>Provide a more verbose WAF log for fixing false positives before going live.</help>
  </field>
  <field>
    <id>httpserver.sendfile</id>
    <label>Enable Sendfile</label>
    <type>checkbox</type>
    <help>Allow the daemon to use the sendfile function.</help>
  </field>
</form>
