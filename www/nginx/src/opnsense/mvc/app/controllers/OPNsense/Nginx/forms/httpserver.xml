<form>
  <field>
    <id>httpserver.listen_http_port</id>
    <label>HTTP Listen Port</label>
    <type>text</type>
  </field>
  <field>
    <id>httpserver.listen_https_port</id>
    <label>HTTPS Listen Port</label>
    <type>text</type>
  </field>
  <field>
    <id>httpserver.syslog_targets</id>
    <label>SYSLOG targets</label>
    <type>select_multiple</type>
    <style>selectpicker</style>
    <advanced>true</advanced>
  </field>
  <field>
    <id>httpserver.proxy_protocol</id>
    <label>PROXY Protocol</label>
    <type>checkbox</type>
    <advanced>true</advanced>
    <help>If you enable the proxy protocol, a downstream proxy can send the client IP and port before the real traffic is set.</help>
  </field>
  <field>
    <id>httpserver.trusted_proxies</id>
    <label>Trusted Proxies</label>
    <allownew>true</allownew>
    <style>tokenize</style>
    <type>select_multiple</type>
    <advanced>true</advanced>
    <help>Enter a list of IP addresses or CIDR networks which are allowed to override the source IP address using the specified header.</help>
  </field>
  <field>
    <id>httpserver.trusted_proxies_alias</id>
    <label>Trusted Proxies (Firewall Alias)</label>
    <style>selectpicker</style>
    <type>dropdown</type>
    <advanced>true</advanced>
    <help>Choose a Firewall Alias for trusted proxies.</help>
  </field>
  <field>
    <id>httpserver.real_ip_source</id>
    <label>Real IP Source</label>
    <style>selectpicker</style>
    <advanced>true</advanced>
    <help>X-Real-IP and X-Forwarded-For are HTTP headers, while PROXY protocol is a protocol which needs to be enabled.</help>
    <type>dropdown</type>
  </field>
  <field>
    <id>httpserver.servername</id>
    <label>Server Name</label>
    <allownew>true</allownew>
    <style>tokenize</style>
    <type>select_multiple</type>
  </field>
  <field>
    <id>httpserver.locations</id>
    <label>Locations</label>
    <style>selectpicker</style>
    <type>select_multiple</type>
  </field>
  <field>
    <id>httpserver.rewrites</id>
    <label>URL Rewriting</label>
    <type>select_multiple</type>
    <style>selectpicker</style>
    <help>Choose URL rewriting rules.</help>
  </field>
  <field>
    <id>httpserver.root</id>
    <label>File System Root</label>
    <type>text</type>
  </field>
  <field>
    <id>httpserver.max_body_size</id>
    <label>Maximum Body Size</label>
    <type>text</type>
    <advanced>true</advanced>
    <help>If the request is larger, it will be rejectet with error 413 (Request Entity Too Large). For example, you can enter 200m.</help>
  </field>
  <field>
    <id>httpserver.body_buffer_size</id>
    <label>Body Buffer Size</label>
    <type>text</type>
    <advanced>true</advanced>
    <help>If the request exceeds this size, it will be written to disk. Enter a number and a unit like 1m.</help>
  </field>
  <field>
    <id>httpserver.certificate</id>
    <label>TLS Certificate</label>
    <type>dropdown</type>
  </field>
  <field>
    <id>httpserver.ca</id>
    <label>CA Certificate</label>
    <type>dropdown</type>
  </field>
  <field>
    <id>httpserver.verify_client</id>
    <label>Verify Client Certificate</label>
    <type>dropdown</type>
    <advanced>true</advanced>
    <help><![CDATA[<ul><li>On: the certificate is requested and validated. Use this option to protect a service with TLS authentication.</li><li>Off: The certificate is not requested. Choose this option for a normal website.</li><li>Optional: The certificate is requested and validated if existing. Choose this option for websites, with TLS login support or mixed TLS protected API and web content.</li><li>Optional, don't verify: Do accept the certificate and let the application choose what to do. Choose this option, for the same reasons as optional but in this case, the request is passed to the backend without rejecting untrusted certificates.</li></ul>]]></help>
  </field>
  <field>
    <id>httpserver.access_log_format</id>
    <label>Access Log Format</label>
    <type>dropdown</type>
  </field>
  <field>
    <id>httpserver.enable_acme_support</id>
    <label>Enable Let's Encrypt Plugin Support</label>
    <type>checkbox</type>
  </field>
  <field>
    <id>httpserver.charset</id>
    <label>Charset</label>
    <type>dropdown</type>
  </field>
  <field>
    <id>httpserver.https_only</id>
    <label>HTTPS Only</label>
    <type>checkbox</type>
    <help>If you check this box, a TLS encrypted connection is enforced.</help>
  </field>
  <field>
    <id>httpserver.block_nonpublic_data</id>
    <label>Block Configuration Files</label>
    <type>checkbox</type>
    <advanced>true</advanced>
    <help>Blocks files like .htaccess files or other files not intended for the public.</help>
  </field>
  <field>
    <id>httpserver.disable_bot_protection</id>
    <label>Disable Bot Protection</label>
    <type>checkbox</type>
    <advanced>true</advanced>
    <help>Blocks the request when a possibly bad bot is detected and adds the originating IP to the managed firewall alias for permanent blocking.</help>
  </field>
  <field>
    <id>httpserver.ip_acl</id>
    <label>IP ACL</label>
    <type>dropdown</type>
    <style>selectpicker</style>
    <help>If you select an IP ACL, the client can only access this service if it fulfills this requirement.</help>
  </field>
  <field>
    <id>httpserver.advanced_acl_server</id>
    <label>Advanced ACL Authentication Backend</label>
    <type>dropdown</type>
    <help>Choose a backend for advanced authentication. If you don't have one, configure it under System -> Access -> Servers. If nothing is configured, the local database is used.</help>
  </field>
  <field>
    <id>httpserver.satisfy</id>
    <label>Satisfy</label>
    <type>dropdown</type>
    <advanced>true</advanced>
    <style>selectpicker</style>
    <help>All: All access restrictions must be fulfilled; Any: Any of the access restrictions must be fulfilled.</help>
  </field>
  <field>
    <id>httpserver.naxsi_extensive_log</id>
    <label>Extensive Naxsi Log</label>
    <type>checkbox</type>
    <advanced>true</advanced>
    <help>Provide a more verbose WAF log for fixing false positives before going live.</help>
  </field>
  <field>
    <id>httpserver.sendfile</id>
    <label>Enable Sendfile</label>
    <type>checkbox</type>
    <advanced>true</advanced>
    <help>Allow the daemon to use the sendfile function.</help>
  </field>
  <field>
    <id>httpserver.security_header</id>
    <label>Security Header</label>
    <type>dropdown</type>
  </field>
  <field>
    <id>httpserver.limit_request_connections</id>
    <label>Limit Requests</label>
    <type>select_multiple</type>
    <style>selectpicker</style>
    <help>If you choose multiple limits, the strictest will be used.</help>
  </field>
</form>
