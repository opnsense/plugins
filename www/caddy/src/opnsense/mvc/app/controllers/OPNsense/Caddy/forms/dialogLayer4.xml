<form>
    <field>
        <id>layer4.enabled</id>
        <label>Enabled</label>
        <type>checkbox</type>
        <help><![CDATA[Enable this Layer4 route.]]></help>
    </field>
    <field>
        <id>layer4.reverse</id>
        <label>Domain</label>
        <type>dropdown</type>
        <help><![CDATA[Select a domain to route via SNI or hostname. The domain will be added to the same "listener_wrapper" as the default reverse proxy. This means, the default HTTP and HTTPS ports are chosen automatically for the frontend listener. If any of the domains have custom ports set, the traffic received by these ports will also be sent to the "listener_wrapper". Essentially, all traffic that Caddy receives on its frontend listeners is funnelled through this wrapper to be processed and routed.]]></help>
    </field>
    <field>
        <id>layer4.description</id>
        <label>Description</label>
        <type>text</type>
        <help><![CDATA[Enter a description for this Layer4 route.]]></help>
    </field>
    <field>
        <id>layer4.Matchers</id>
        <label>Matchers</label>
        <type>dropdown</type>
        <help><![CDATA[Match the traffic of the selected domain via one of the offered protocols. When the protocol matches, the traffic will be streamed to the chosen upstream domain (without terminating TLS). Since the Layer4 app matches the traffic before the HTTP app, "HTTP Handlers" for the same domain name will not match anymore. Only protocols that send SNI can be implemented here. When choosing TLS, any protocol that looks like TLS in its TCP/UDP pakets can be routed without being altered. An example would be OpenConnect SSL VPN.]]></help>
    </field>
    <field>
        <id>layer4.ToDomain</id>
        <label>Upstream Domain</label>
        <type>select_multiple</type>
        <style>tokenize</style>
        <allownew>true</allownew>
        <hint>192.168.1.1</hint>
        <help><![CDATA[Enter a domain name or IP address of the upstream destination. If multiple are chosen, they will be load balanced with the default random policy.]]></help>
    </field>
    <field>
        <id>layer4.ToPort</id>
        <label>Upstream Port</label>
        <type>text</type>
        <help><![CDATA[Choose a custom port for the upstream destination.]]></help>
    </field>
    <field>
        <type>header</type>
        <label>Health Check</label>
        <collapse>true</collapse>
    </field>
    <field>
        <id>layer4.PassiveHealthFailDuration</id>
        <label>Upstream Fail Duration</label>
        <type>text</type>
        <help><![CDATA[Enables a passive health check when multiple destinations in "Upstream Domain" are set. "Fail Duration" is a value that defines how long to remember a failed request. A duration of 1 or more seconds enables passive health checking; the default is empty (off). A reasonable starting point might be 30s to balance error rates with responsiveness when bringing an unhealthy upstream back online.]]></help>
    </field>
</form>
