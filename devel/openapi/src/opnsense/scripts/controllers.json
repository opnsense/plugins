{"OPNsense\\Mvc\\Controller":{"name":"OPNsense\\Mvc\\Controller","namespace":"OPNsense\\Mvc","parent":null,"methods":[],"model":null,"is_abstract":true,"doc":false},"OPNsense\\Base\\ControllerRoot":{"name":"OPNsense\\Base\\ControllerRoot","namespace":"OPNsense\\Base","parent":"OPNsense\\Mvc\\Controller","methods":[],"model":null,"is_abstract":false,"doc":"/**\n * Class ControllerRoot wrap shared OPNsense controller features (auth, logging)\n * @package OPNsense\\Base\n */"},"OPNsense\\Base\\ApiControllerBase":{"name":"OPNsense\\Base\\ApiControllerBase","namespace":"OPNsense\\Base","parent":"OPNsense\\Base\\ControllerRoot","methods":[],"model":null,"is_abstract":false,"doc":"/**\n * Class ApiControllerBase, inherit this class to implement API calls\n * @package OPNsense\\Base\n */"},"OPNsense\\Base\\ApiMutableModelControllerBase":{"name":"OPNsense\\Base\\ApiMutableModelControllerBase","namespace":"OPNsense\\Base","parent":"OPNsense\\Base\\ApiControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"}],"model":null,"is_abstract":true,"doc":"/**\n * Class ApiMutableModelControllerBase, inherit this class to implement\n * an API that exposes a model with get and set actions.\n * You need to implement a method to create new blank model\n * objecs (newModelObject) as well as a method to return\n * the name of the model.\n * @package OPNsense\\Base\n */"},"OPNsense\\Auth\\Api\\GroupController":{"name":"OPNsense\\Auth\\Api\\GroupController","namespace":"OPNsense\\Auth\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"search","method":"*","parameters":[],"doc":false},{"name":"get","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":42}],"doc":false},{"name":"add","method":"POST","parameters":[],"doc":false},{"name":"set","method":"POST","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"del","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false}],"model":"OPNsense\\Auth\\Group","is_abstract":false,"doc":"/**\n * Class GroupController\n * @package OPNsense\\Auth\\Api\n */"},"OPNsense\\Auth\\Api\\PrivController":{"name":"OPNsense\\Auth\\Api\\PrivController","namespace":"OPNsense\\Auth\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"search","method":"GET","parameters":[],"doc":false},{"name":"getItem","method":"GET","parameters":[{"name":"id","has_default":false,"default":null}],"doc":false},{"name":"setItem","method":"POST","parameters":[{"name":"id","has_default":false,"default":null}],"doc":false}],"model":"OPNsense\\Auth\\Priv","is_abstract":false,"doc":"/**\n * Class PrivController\n * @package OPNsense\\Auth\\Api\n */"},"OPNsense\\Auth\\Api\\UserController":{"name":"OPNsense\\Auth\\Api\\UserController","namespace":"OPNsense\\Auth\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"search","method":"*","parameters":[],"doc":false},{"name":"get","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"download","method":"GET","parameters":[],"doc":false},{"name":"upload","method":"POST","parameters":[],"doc":false},{"name":"newOtpSeed","method":"GET","parameters":[],"doc":false},{"name":"add","method":"POST","parameters":[],"doc":false},{"name":"set","method":"POST","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"del","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"searchApiKey","method":"GET","parameters":[],"doc":false},{"name":"delApiKey","method":"POST","parameters":[{"name":"id","has_default":false,"default":null}],"doc":false},{"name":"addApiKey","method":"POST","parameters":[{"name":"username","has_default":false,"default":null}],"doc":false}],"model":"OPNsense\\Auth\\User","is_abstract":false,"doc":"/**\n * Class UserController\n * @package OPNsense\\Auth\\Api\n */"},"OPNsense\\CaptivePortal\\Api\\AccessController":{"name":"OPNsense\\CaptivePortal\\Api\\AccessController","namespace":"OPNsense\\CaptivePortal\\Api","parent":"OPNsense\\Base\\ApiControllerBase","methods":[{"name":"logon","method":"POST","parameters":[{"name":"zoneid","has_default":true,"default":0}],"doc":"/**\n     * logon client to zone, must use post type of request\n     * @param int|string $zoneid zone id number, provided for backwards compatibility\n     * @return array\n     * @throws \\OPNsense\\Base\\ModelException\n     */"},{"name":"logoff","method":"GET","parameters":[{"name":"zoneid","has_default":true,"default":0}],"doc":"/**\n     * logoff client\n     * @param int|string $zoneid zone id number, provided for backwards compatibility\n     * @return array\n     * @throws \\OPNsense\\Base\\ModelException\n     *\n     */"},{"name":"status","method":"GET","parameters":[{"name":"zoneid","has_default":true,"default":0}],"doc":"/**\n     * retrieve session info\n     * @param int|string $zoneid zone id number, provided for backwards compatibility\n     * @return array\n     * @throws \\OPNsense\\Base\\ModelException\n     *\n     */"},{"name":"api","method":"GET","parameters":[],"doc":"/**\n     * RFC 8908: Captive Portal API status object\n     *\n     * The URI for this endpoint can be provisioned to the client\n     * as defined by RFC 7710.\n     *\n     * Request and response must set media type as \"application/captive+json\".\n     *\n     * Response contains the following fields:\n     * - captive: boolean: client is currently in a state of captivity.\n     * - user-portal-url: string: URL to login web portal (must be HTTPS).\n     * - seconds-remaining: number: seconds until session expires,\n     *   only relevant if hardtimeout set.\n     *\n     * Fields not implemented here but possible in the future:\n     * - venue-info-url: string: Information page (must be HTTPS)\n     * - can-extend-session: boolean: hint that client system can access\n     *   user-portal-url to extend session.\n     * - bytes-remaining: number: no. of bytes after which session expires.\n     *\n     * Response must set Cache-Control to 'private' or 'no-store'\n     */"}],"model":null,"is_abstract":false,"doc":"/**\n * Class AccessController\n * @package OPNsense\\CaptivePortal\n */"},"OPNsense\\CaptivePortal\\Api\\ServiceController":{"name":"OPNsense\\CaptivePortal\\Api\\ServiceController","namespace":"OPNsense\\CaptivePortal\\Api","parent":"OPNsense\\Base\\ApiControllerBase","methods":[{"name":"reconfigure","method":"POST","parameters":[],"doc":"/**\n     * reconfigure captive portal\n     */"},{"name":"getTemplate","method":"GET","parameters":[{"name":"fileid","has_default":true,"default":null}],"doc":"/**\n     * @param null $fileid unique template id (fileid field)\n     * @return mixed\n     * @throws \\Exception\n     */"},{"name":"saveTemplate","method":"POST","parameters":[],"doc":"/**\n     * save template, updates existing or create new.\n     * @return string\n     */"},{"name":"delTemplate","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":"/**\n     * delete template by uuid\n     * @param $uuid item unique id\n     * @return array status\n     */"},{"name":"searchTemplates","method":"GET","parameters":[],"doc":"/**\n     * search captive portal zones\n     * @return array\n     */"}],"model":null,"is_abstract":false,"doc":"/**\n * Class ServiceController\n * @package OPNsense\\CaptivePortal\n */"},"OPNsense\\CaptivePortal\\Api\\SessionController":{"name":"OPNsense\\CaptivePortal\\Api\\SessionController","namespace":"OPNsense\\CaptivePortal\\Api","parent":"OPNsense\\Base\\ApiControllerBase","methods":[{"name":"list","method":"GET","parameters":[{"name":"zoneid","has_default":true,"default":0}],"doc":"/**\n     * list client sessions\n     * @param int $zoneid zone number\n     * @return array|mixed\n     */"},{"name":"search","method":"GET","parameters":[],"doc":"/**\n     * search through connected clients\n     */"},{"name":"zones","method":"GET","parameters":[],"doc":"/**\n     * return list of available zones\n     * @return array available zones\n     */"},{"name":"disconnect","method":"POST","parameters":[{"name":"zoneid","has_default":true,"default":""}],"doc":"/**\n     * disconnect a client\n     * @param string|int $zoneid zoneid (deprecated)\n     * @return array|mixed\n     */"},{"name":"connect","method":"POST","parameters":[{"name":"zoneid","has_default":true,"default":0}],"doc":"/**\n     * connect a client\n     * @param string|int $zoneid zoneid\n     * @return array|mixed\n     */"}],"model":null,"is_abstract":false,"doc":"/**\n * Class SessionController\n * @package OPNsense\\CaptivePortal\n */"},"OPNsense\\CaptivePortal\\Api\\SettingsController":{"name":"OPNsense\\CaptivePortal\\Api\\SettingsController","namespace":"OPNsense\\CaptivePortal\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"getZone","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":"/**\n     * retrieve zone settings or return defaults\n     * @param $uuid item unique id\n     * @return array\n     */"},{"name":"setZone","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":"/**\n     * update zone with given properties\n     * @param $uuid item unique id\n     * @return array\n     */"},{"name":"addZone","method":"POST","parameters":[],"doc":"/**\n     * add new zone and set with attributes from post\n     * @return array\n     */"},{"name":"delZone","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":"/**\n     * delete zone by uuid\n     * @param $uuid item unique id\n     * @return array status\n     */"},{"name":"toggleZone","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null},{"name":"enabled","has_default":true,"default":null}],"doc":"/**\n     * toggle zone by uuid (enable/disable)\n     * @param $uuid item unique id\n     * @param $enabled desired state enabled(1)/disabled(1), leave empty for toggle\n     * @return array status\n     */"},{"name":"searchZones","method":"*","parameters":[],"doc":"/**\n     * search captive portal zones\n     * @return array\n     */"}],"model":"\\OPNsense\\CaptivePortal\\CaptivePortal","is_abstract":false,"doc":"/**\n * Class SettingsController Handles settings related API actions for Captive Portal\n * @package OPNsense\\TrafficShaper\n */"},"OPNsense\\CaptivePortal\\Api\\VoucherController":{"name":"OPNsense\\CaptivePortal\\Api\\VoucherController","namespace":"OPNsense\\CaptivePortal\\Api","parent":"OPNsense\\Base\\ApiControllerBase","methods":[{"name":"listProviders","method":"GET","parameters":[],"doc":"/**\n     * list voucher providers (authenticators of type \"voucher\")\n     * @return array list of auth providers\n     */"},{"name":"listVoucherGroups","method":"GET","parameters":[{"name":"provider","has_default":false,"default":null}],"doc":"/**\n     * list voucher groups\n     * @param string $provider name of authentication provider\n     * @return array list of registered vouchers\n     */"},{"name":"listVouchers","method":"GET","parameters":[{"name":"provider","has_default":false,"default":null},{"name":"group","has_default":false,"default":null}],"doc":"/**\n     * list vouchers\n     * @param string $provider auth provider\n     * @param string $group group name\n     * @return array vouchers within this group\n     */"},{"name":"dropVoucherGroup","method":"POST","parameters":[{"name":"provider","has_default":false,"default":null},{"name":"group","has_default":false,"default":null}],"doc":"/**\n     * drop a voucher group\n     * @param string $provider auth provider\n     * @param string $group group name\n     * @return array status\n     */"},{"name":"dropExpiredVouchers","method":"POST","parameters":[{"name":"provider","has_default":false,"default":null},{"name":"group","has_default":false,"default":null}],"doc":"/**\n     * drop expired vouchers from group\n     * @param string $provider auth provider\n     * @param string $group group name\n     * @return array status\n     */"},{"name":"generateVouchers","method":"POST","parameters":[{"name":"provider","has_default":false,"default":null}],"doc":"/**\n     * generate new vouchers\n     * @param string $provider auth provider\n     * @return array generated vouchers\n     */"},{"name":"expireVoucher","method":"POST","parameters":[{"name":"provider","has_default":false,"default":null}],"doc":"/**\n     * expire a voucher\n     * @param string $provider auth provider\n     * @return array status\n     */"}],"model":null,"is_abstract":false,"doc":"/**\n * Class VoucherController\n * @package OPNsense\\CaptivePortal\n */"},"OPNsense\\Core\\Api\\BackupController":{"name":"OPNsense\\Core\\Api\\BackupController","namespace":"OPNsense\\Core\\Api","parent":"OPNsense\\Base\\ApiControllerBase","methods":[{"name":"providers","method":"GET","parameters":[],"doc":"/**\n     * list available providers\n     * @return array\n     */"},{"name":"backups","method":"GET","parameters":[{"name":"host","has_default":false,"default":null}],"doc":"/**\n     * list available backups for selected host\n     */"},{"name":"diff","method":"GET","parameters":[{"name":"host","has_default":false,"default":null},{"name":"backup1","has_default":false,"default":null},{"name":"backup2","has_default":false,"default":null}],"doc":"/**\n     * diff two backups for selected host\n     */"},{"name":"deleteBackup","method":"GET","parameters":[{"name":"backup","has_default":false,"default":null}],"doc":"/**\n     * delete local backup\n     */"},{"name":"revertBackup","method":"GET","parameters":[{"name":"backup","has_default":false,"default":null}],"doc":"/**\n     * revert to local backup from history\n     */"},{"name":"download","method":"GET","parameters":[{"name":"host","has_default":false,"default":null},{"name":"backup","has_default":true,"default":null}],"doc":"/**\n     * download specified backup, when left empty the latest is offered\n     */"}],"model":null,"is_abstract":false,"doc":"/**\n * Class BackupController\n * @package OPNsense\\Core\\Api\n */"},"OPNsense\\Core\\Api\\DashboardController":{"name":"OPNsense\\Core\\Api\\DashboardController","namespace":"OPNsense\\Core\\Api","parent":"OPNsense\\Base\\ApiControllerBase","methods":[{"name":"getDashboard","method":"GET","parameters":[],"doc":false},{"name":"saveWidgets","method":"POST","parameters":[],"doc":false},{"name":"restoreDefaults","method":"POST","parameters":[],"doc":false},{"name":"productInfoFeed","method":"GET","parameters":[],"doc":false},{"name":"picture","method":"GET","parameters":[],"doc":false}],"model":null,"is_abstract":false,"doc":false},"OPNsense\\Core\\Api\\FirmwareController":{"name":"OPNsense\\Core\\Api\\FirmwareController","namespace":"OPNsense\\Core\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"check","method":"POST","parameters":[],"doc":"/**\n     * Run check for updates\n     * @return array\n     */"},{"name":"status","method":"POST","parameters":[],"doc":"/**\n     * retrieve available updates\n     * @return array\n     */"},{"name":"changelog","method":"POST","parameters":[{"name":"version","has_default":false,"default":null}],"doc":"/**\n     * Retrieve specific changelog in text and html format\n     * @param string $version changelog to retrieve\n     * @return array corresponding changelog in both formats\n     * @throws \\Exception\n     */"},{"name":"log","method":"POST","parameters":[{"name":"clear","has_default":false,"default":null}],"doc":"/**\n     * Retrieve upgrade log hidden in system\n     * @return string with upgrade log\n     * @throws \\Exception\n     */"},{"name":"license","method":"POST","parameters":[{"name":"package","has_default":false,"default":null}],"doc":"/**\n     * Retrieve specific license for package in text format\n     * @param string $package package to retrieve\n     * @return array with all possible licenses\n     * @throws \\Exception\n     */"},{"name":"reboot","method":"POST","parameters":[],"doc":"/**\n     * perform reboot\n     * @return array status\n     * @throws \\Exception\n     */"},{"name":"poweroff","method":"POST","parameters":[],"doc":"/**\n     * perform poweroff\n     * @return array status\n     * @throws \\Exception\n     */"},{"name":"update","method":"POST","parameters":[],"doc":"/**\n     * perform (stable) update\n     * @return array status\n     * @throws \\Exception\n     */"},{"name":"upgrade","method":"POST","parameters":[],"doc":"/**\n     * perform (major) upgrade\n     * @return array status\n     * @throws \\Exception\n     */"},{"name":"connection","method":"POST","parameters":[],"doc":"/**\n     * run a connection check\n     * @return array status\n     * @throws \\Exception\n     */"},{"name":"health","method":"POST","parameters":[],"doc":"/**\n     * run a health check\n     * @return array status\n     * @throws \\Exception\n     */"},{"name":"audit","method":"POST","parameters":[],"doc":false},{"name":"reinstall","method":"POST","parameters":[{"name":"pkg_name","has_default":false,"default":null}],"doc":"/**\n     * reinstall package\n     * @param string $pkg_name package name to reinstall\n     * @return array status\n     * @throws \\Exception\n     */"},{"name":"syncPlugins","method":"POST","parameters":[],"doc":"/**\n     * install missing configured plugins\n     * @return array status\n     * @throws \\Exception\n     */"},{"name":"resyncPlugins","method":"POST","parameters":[],"doc":"/**\n     * reset missing configured plugins\n     * @return array status\n     * @throws \\Exception\n     */"},{"name":"install","method":"POST","parameters":[{"name":"pkg_name","has_default":false,"default":null}],"doc":"/**\n     * install package\n     * @param string $pkg_name package name to install\n     * @return array status\n     * @throws \\Exception\n     */"},{"name":"remove","method":"POST","parameters":[{"name":"pkg_name","has_default":false,"default":null}],"doc":"/**\n     * remove package\n     * @param string $pkg_name package name to remove\n     * @return array status\n     * @throws \\Exception\n     */"},{"name":"lock","method":"POST","parameters":[{"name":"pkg_name","has_default":false,"default":null}],"doc":"/**\n     * lock package\n     * @param string $pkg_name package name to lock\n     * @return array status\n     * @throws \\Exception\n     */"},{"name":"unlock","method":"POST","parameters":[{"name":"pkg_name","has_default":false,"default":null}],"doc":"/**\n     * unlock package\n     * @param string $pkg_name package name to unlock\n     * @return array status\n     * @throws \\Exception\n     */"},{"name":"running","method":"GET","parameters":[],"doc":"/**\n     * retrieve execution status\n     */"},{"name":"upgradestatus","method":"GET","parameters":[],"doc":"/**\n     * retrieve upgrade status (and log file of current process)\n     */"},{"name":"details","method":"POST","parameters":[{"name":"package","has_default":false,"default":null}],"doc":"/**\n     * query package details\n     * @return array\n     * @throws \\Exception\n     */"},{"name":"info","method":"GET","parameters":[],"doc":"/**\n     * list local and remote packages\n     * @return array\n     */"},{"name":"getOptions","method":"GET","parameters":[],"doc":"/**\n     * list firmware mirror and flavour options\n     * @return array\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * set firmware configuration options\n     * @return array status\n     */"}],"model":"OPNsense\\Core\\Firmware","is_abstract":false,"doc":"/**\n * Class FirmwareController\n * @package OPNsense\\Core\n */"},"OPNsense\\Core\\Api\\HasyncController":{"name":"OPNsense\\Core\\Api\\HasyncController","namespace":"OPNsense\\Core\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"reconfigure","method":"POST","parameters":[],"doc":false}],"model":"OPNsense\\Core\\Hasync","is_abstract":false,"doc":"/**\n * Class HasyncController\n * @package OPNsense\\Core\n */"},"OPNsense\\Core\\Api\\HasyncStatusController":{"name":"OPNsense\\Core\\Api\\HasyncStatusController","namespace":"OPNsense\\Core\\Api","parent":"OPNsense\\Base\\ApiControllerBase","methods":[{"name":"version","method":"GET","parameters":[],"doc":false},{"name":"services","method":"GET","parameters":[],"doc":false},{"name":"stop","method":"POST","parameters":[{"name":"service","has_default":true,"default":null},{"name":"service_id","has_default":true,"default":null}],"doc":false},{"name":"start","method":"POST","parameters":[{"name":"service","has_default":true,"default":null},{"name":"service_id","has_default":true,"default":null}],"doc":false},{"name":"restart","method":"POST","parameters":[{"name":"service","has_default":true,"default":null},{"name":"service_id","has_default":true,"default":null}],"doc":false},{"name":"restartAll","method":"POST","parameters":[{"name":"service","has_default":true,"default":null},{"name":"service_id","has_default":true,"default":null}],"doc":false}],"model":null,"is_abstract":false,"doc":"/**\n * Class HasyncStatusController\n * @package OPNsense\\Core\n */"},"OPNsense\\Core\\Api\\InitialSetupController":{"name":"OPNsense\\Core\\Api\\InitialSetupController","namespace":"OPNsense\\Core\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"configure","method":"GET","parameters":[],"doc":false}],"model":"OPNsense\\Core\\InitialSetup","is_abstract":false,"doc":"/**\n * Class InitialSetupController\n * @package OPNsense\\Core\n */"},"OPNsense\\Core\\Api\\MenuController":{"name":"OPNsense\\Core\\Api\\MenuController","namespace":"OPNsense\\Core\\Api","parent":"OPNsense\\Base\\ApiControllerBase","methods":[{"name":"tree","method":"GET","parameters":[],"doc":"/**\n     * return menu items for this user\n     * @return array\n     */"},{"name":"search","method":"GET","parameters":[],"doc":"/**\n     * search menu items\n     * @return array\n     */"}],"model":null,"is_abstract":false,"doc":"/**\n * Class MenuController\n * @package OPNsense\\Core\n */"},"OPNsense\\Core\\Api\\ServiceController":{"name":"OPNsense\\Core\\Api\\ServiceController","namespace":"OPNsense\\Core\\Api","parent":"OPNsense\\Base\\ApiControllerBase","methods":[{"name":"search","method":"GET","parameters":[],"doc":"/**\n     * Search service entries\n     * @return array\n     */"},{"name":"start","method":"POST","parameters":[{"name":"name","has_default":false,"default":null},{"name":"id","has_default":true,"default":""}],"doc":"/**\n     * start a service\n     * @param string $name to identify the service\n     * @param string $id to identify the service instance\n     * @return array\n     */"},{"name":"restart","method":"POST","parameters":[{"name":"name","has_default":false,"default":null},{"name":"id","has_default":true,"default":""}],"doc":"/**\n     * restart a service\n     * @param string $name to identify the service\n     * @param string $id to identify the service instance\n     * @return array\n     */"},{"name":"stop","method":"POST","parameters":[{"name":"name","has_default":false,"default":null},{"name":"id","has_default":true,"default":""}],"doc":"/**\n     * stop a service\n     * @param string $name to identify the service\n     * @param string $id to identify the service instance\n     * @return array\n     */"}],"model":null,"is_abstract":false,"doc":"/**\n * Class SessionsController\n * @package OPNsense\\IPsec\\Api\n */"},"OPNsense\\Core\\Api\\SnapshotsController":{"name":"OPNsense\\Core\\Api\\SnapshotsController","namespace":"OPNsense\\Core\\Api","parent":"OPNsense\\Base\\ApiControllerBase","methods":[{"name":"isSupported","method":"GET","parameters":[],"doc":"/**\n     * @return boolean is this a supported feature (ZFS enabled)\n     */"},{"name":"search","method":"GET","parameters":[],"doc":"/**\n     * search snapshots\n     * @return array\n     */"},{"name":"get","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":"/**\n     * fetch an environment by uuid, return new when not found or $uuid equals null\n     * @param string $uuid\n     * @return array\n     */"},{"name":"set","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":"/**\n     * create a new snapshot\n     * @param string $uuid uuid to save\n     * @return array status\n     */"},{"name":"add","method":"POST","parameters":[],"doc":"/**\n     * add or clone a snapshot\n     * @return array status\n     */"},{"name":"del","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":"/**\n     * delete an environment by uuid\n     * @param string $uuid\n     * @return array\n     * @throws UserException when not found (or possible)\n     */"},{"name":"activate","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":"/**\n     * activate a snapshot by uuid\n     * @param string $uuid\n     * @return array\n     * @throws UserException when not found (or possible)\n     */"}],"model":null,"is_abstract":false,"doc":false},"OPNsense\\Core\\Api\\SystemController":{"name":"OPNsense\\Core\\Api\\SystemController","namespace":"OPNsense\\Core\\Api","parent":"OPNsense\\Base\\ApiControllerBase","methods":[{"name":"halt","method":"POST","parameters":[],"doc":false},{"name":"reboot","method":"POST","parameters":[],"doc":false},{"name":"status","method":"GET","parameters":[],"doc":false},{"name":"dismissStatus","method":"POST","parameters":[],"doc":false}],"model":null,"is_abstract":false,"doc":"/**\n * Class SystemController\n * @package OPNsense\\Core\n */"},"OPNsense\\Core\\Api\\TunablesController":{"name":"OPNsense\\Core\\Api\\TunablesController","namespace":"OPNsense\\Core\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"searchItem","method":"*","parameters":[],"doc":false},{"name":"setItem","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"addItem","method":"POST","parameters":[],"doc":false},{"name":"getItem","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"delItem","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"reset","method":"POST","parameters":[],"doc":false},{"name":"reconfigure","method":"POST","parameters":[],"doc":false}],"model":"OPNsense\\Core\\Tunables","is_abstract":false,"doc":false},"OPNsense\\Cron\\Api\\ServiceController":{"name":"OPNsense\\Cron\\Api\\ServiceController","namespace":"OPNsense\\Cron\\Api","parent":"OPNsense\\Base\\ApiControllerBase","methods":[{"name":"reconfigure","method":"POST","parameters":[],"doc":"/**\n     * restart cron service\n     * @return array\n     */"}],"model":null,"is_abstract":false,"doc":"/**\n * Class ServiceController\n * @package OPNsense\\Cron\n */"},"OPNsense\\Cron\\Api\\SettingsController":{"name":"OPNsense\\Cron\\Api\\SettingsController","namespace":"OPNsense\\Cron\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"getJob","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":"/**\n     * retrieve job settings or return defaults\n     * @param $uuid item unique id\n     * @return array job contents\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"setJob","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":"/**\n     * update job with given properties\n     * @param $uuid item unique id\n     * @return array\n     */"},{"name":"addJob","method":"POST","parameters":[],"doc":"/**\n     * add new job and set with attributes from post\n     * @return array save result + validation output\n     * @throws \\OPNsense\\Base\\ModelException when not bound to model\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException\n     */"},{"name":"delJob","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":"/**\n     * delete job by uuid ( only if origin is cron)\n     * @param string $uuid item unique id\n     * @return array status\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     * @throws \\OPNsense\\Base\\ModelException when not bound to model\n     */"},{"name":"toggleJob","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null},{"name":"enabled","has_default":true,"default":null}],"doc":"/**\n     * toggle job by uuid (enable/disable)\n     * @param $uuid item unique id\n     * @param $enabled desired state enabled(1)/disabled(1), leave empty for toggle\n     * @return array status\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"searchJobs","method":"*","parameters":[],"doc":"/**\n     * search cron jobs\n     * @return array search results\n     * @throws \\ReflectionException\n     */"}],"model":"\\OPNsense\\Cron\\Cron","is_abstract":false,"doc":"/**\n * Class SettingsController Handles settings related API actions for the Cron\n * @package OPNsense\\Cron\n */"},"OPNsense\\DHCPv4\\Api\\LeasesController":{"name":"OPNsense\\DHCPv4\\Api\\LeasesController","namespace":"OPNsense\\DHCPv4\\Api","parent":"OPNsense\\Base\\ApiControllerBase","methods":[{"name":"searchLease","method":"GET","parameters":[],"doc":false},{"name":"delLease","method":"POST","parameters":[{"name":"ip","has_default":false,"default":null}],"doc":false}],"model":null,"is_abstract":false,"doc":false},"OPNsense\\Base\\ApiMutableServiceControllerBase":{"name":"OPNsense\\Base\\ApiMutableServiceControllerBase","namespace":"OPNsense\\Base","parent":"OPNsense\\Base\\ApiControllerBase","methods":[{"name":"start","method":"POST","parameters":[],"doc":"/**\n     * start service\n     * @return array\n     * @throws \\Exception when configd action fails\n     */"},{"name":"stop","method":"POST","parameters":[],"doc":"/**\n     * stop service\n     * @return array\n     * @throws \\Exception when configd actions fails\n     */"},{"name":"restart","method":"POST","parameters":[],"doc":"/**\n     * restart service\n     * @return array\n     * @throws \\Exception\n     */"},{"name":"reconfigure","method":"POST","parameters":[],"doc":"/**\n     * reconfigure with optional stop, generate config and start / reload\n     * @return array response message\n     * @throws \\Exception when configd action fails\n     * @throws \\ReflectionException when model can't be instantiated\n     */"},{"name":"status","method":"GET","parameters":[],"doc":"/**\n     * retrieve status of service\n     * @return array response message\n     * @throws \\Exception when configd action fails\n     */"}],"model":null,"is_abstract":true,"doc":"/**\n * Class ApiMutableServiceControllerBase, inherit this class to implement\n * an API that exposes a service controller with start, stop, restart,\n * reconfigure and status actions.\n * @package OPNsense\\Base\n */"},"OPNsense\\DHCPv4\\Api\\ServiceController":{"name":"OPNsense\\DHCPv4\\Api\\ServiceController","namespace":"OPNsense\\DHCPv4\\Api","parent":"OPNsense\\Base\\ApiMutableServiceControllerBase","methods":[{"name":"start","method":"POST","parameters":[],"doc":"/**\n     * start service\n     * @return array\n     * @throws \\Exception when configd action fails\n     */"},{"name":"stop","method":"POST","parameters":[],"doc":"/**\n     * stop service\n     * @return array\n     * @throws \\Exception when configd actions fails\n     */"},{"name":"restart","method":"POST","parameters":[],"doc":"/**\n     * restart service\n     * @return array\n     * @throws \\Exception\n     */"},{"name":"reconfigure","method":"POST","parameters":[],"doc":"/**\n     * reconfigure with optional stop, generate config and start / reload\n     * @return array response message\n     * @throws \\Exception when configd action fails\n     * @throws \\ReflectionException when model can't be instantiated\n     */"},{"name":"status","method":"GET","parameters":[],"doc":"/**\n     * retrieve status of service\n     * @return array response message\n     * @throws \\Exception when configd action fails\n     */"}],"model":null,"is_abstract":false,"doc":false},"OPNsense\\DHCPv6\\Api\\LeasesController":{"name":"OPNsense\\DHCPv6\\Api\\LeasesController","namespace":"OPNsense\\DHCPv6\\Api","parent":"OPNsense\\Base\\ApiControllerBase","methods":[{"name":"searchLease","method":"GET","parameters":[],"doc":false},{"name":"searchPrefix","method":"GET","parameters":[],"doc":false},{"name":"delLease","method":"POST","parameters":[{"name":"ip","has_default":false,"default":null}],"doc":false}],"model":null,"is_abstract":false,"doc":false},"OPNsense\\DHCPv6\\Api\\ServiceController":{"name":"OPNsense\\DHCPv6\\Api\\ServiceController","namespace":"OPNsense\\DHCPv6\\Api","parent":"OPNsense\\Base\\ApiMutableServiceControllerBase","methods":[{"name":"start","method":"POST","parameters":[],"doc":"/**\n     * start service\n     * @return array\n     * @throws \\Exception when configd action fails\n     */"},{"name":"stop","method":"POST","parameters":[],"doc":"/**\n     * stop service\n     * @return array\n     * @throws \\Exception when configd actions fails\n     */"},{"name":"restart","method":"POST","parameters":[],"doc":"/**\n     * restart service\n     * @return array\n     * @throws \\Exception\n     */"},{"name":"reconfigure","method":"POST","parameters":[],"doc":"/**\n     * reconfigure with optional stop, generate config and start / reload\n     * @return array response message\n     * @throws \\Exception when configd action fails\n     * @throws \\ReflectionException when model can't be instantiated\n     */"},{"name":"status","method":"GET","parameters":[],"doc":"/**\n     * retrieve status of service\n     * @return array response message\n     * @throws \\Exception when configd action fails\n     */"}],"model":null,"is_abstract":false,"doc":false},"OPNsense\\DHCRelay\\Api\\ServiceController":{"name":"OPNsense\\DHCRelay\\Api\\ServiceController","namespace":"OPNsense\\DHCRelay\\Api","parent":"OPNsense\\Base\\ApiControllerBase","methods":[{"name":"reconfigure","method":"POST","parameters":[],"doc":"/**\n     * restart dhcrelay services\n     * @return array\n     */"}],"model":null,"is_abstract":false,"doc":false},"OPNsense\\DHCRelay\\Api\\SettingsController":{"name":"OPNsense\\DHCRelay\\Api\\SettingsController","namespace":"OPNsense\\DHCRelay\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"searchRelay","method":"*","parameters":[],"doc":false},{"name":"getRelay","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"addRelay","method":"POST","parameters":[],"doc":false},{"name":"delRelay","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"setRelay","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"toggleRelay","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null},{"name":"enabled","has_default":true,"default":null}],"doc":false},{"name":"searchDest","method":"*","parameters":[],"doc":false},{"name":"getDest","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"addDest","method":"POST","parameters":[],"doc":false},{"name":"delDest","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"setDest","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false}],"model":"\\OPNsense\\DHCRelay\\DHCRelay","is_abstract":false,"doc":false},"OPNsense\\Diagnostics\\Api\\ActivityController":{"name":"OPNsense\\Diagnostics\\Api\\ActivityController","namespace":"OPNsense\\Diagnostics\\Api","parent":"OPNsense\\Base\\ApiControllerBase","methods":[{"name":"getActivity","method":"GET","parameters":[],"doc":"/**\n     * retrieve system activity (top)\n     * @return array\n     */"}],"model":null,"is_abstract":false,"doc":"/**\n * Class ActivityController\n * @package OPNsense\\Diagnostics\\Api\n */"},"OPNsense\\Diagnostics\\Api\\CpuUsageController":{"name":"OPNsense\\Diagnostics\\Api\\CpuUsageController","namespace":"OPNsense\\Diagnostics\\Api","parent":"OPNsense\\Base\\ApiControllerBase","methods":[{"name":"getCPUType","method":"GET","parameters":[],"doc":false},{"name":"stream","method":"GET","parameters":[],"doc":false}],"model":null,"is_abstract":false,"doc":"/**\n * Class CpuUsage\n * @package OPNsense\\Diagnostics\n */"},"OPNsense\\Diagnostics\\Api\\DnsController":{"name":"OPNsense\\Diagnostics\\Api\\DnsController","namespace":"OPNsense\\Diagnostics\\Api","parent":"OPNsense\\Base\\ApiControllerBase","methods":[{"name":"reverseLookup","method":"GET","parameters":[],"doc":"/**\n     * perform a reverse dns lookup\n     * @return array\n     */"}],"model":null,"is_abstract":false,"doc":"/**\n * Class DnsController\n * @package OPNsense\\Diagnostics\n */"},"OPNsense\\Diagnostics\\Api\\DnsDiagnosticsController":{"name":"OPNsense\\Diagnostics\\Api\\DnsDiagnosticsController","namespace":"OPNsense\\Diagnostics\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"set","method":"GET","parameters":[],"doc":false}],"model":"OPNsense\\Diagnostics\\DnsDiagnostics","is_abstract":false,"doc":false},"OPNsense\\Diagnostics\\Api\\FirewallController":{"name":"OPNsense\\Diagnostics\\Api\\FirewallController","namespace":"OPNsense\\Diagnostics\\Api","parent":"OPNsense\\Base\\ApiControllerBase","methods":[{"name":"log","method":"GET","parameters":[],"doc":"/**\n     * retrieve firewall log\n     * @return array\n     */"},{"name":"streamLog","method":"GET","parameters":[],"doc":false},{"name":"logFilters","method":"GET","parameters":[],"doc":"/**\n     * retrieve firewall log filter choices\n     * @return array\n     */"},{"name":"stats","method":"GET","parameters":[],"doc":"/**\n     * retrieve firewall stats\n     * @return array\n     */"},{"name":"queryStates","method":"POST","parameters":[],"doc":"/**\n     * query pf states\n     */"},{"name":"queryPfTop","method":"POST","parameters":[],"doc":"/**\n     * query pftop\n     */"},{"name":"delState","method":"POST","parameters":[{"name":"stateid","has_default":false,"default":null},{"name":"creatorid","has_default":false,"default":null}],"doc":"/**\n     * delete / drop a specific state by state+creator id\n     */"},{"name":"killStates","method":"POST","parameters":[],"doc":"/**\n     * drop pf states by filter and/or rule id\n     */"},{"name":"listRuleIds","method":"GET","parameters":[],"doc":"/**\n     * return rule'ids and descriptions from running config\n     */"},{"name":"flushStates","method":"POST","parameters":[],"doc":"/**\n     * flush all pf states\n     */"},{"name":"flushSources","method":"POST","parameters":[],"doc":"/**\n     * flush pf source tracking\n     */"},{"name":"pfStatistics","method":"GET","parameters":[{"name":"section","has_default":true,"default":null}],"doc":"/**\n     * retrieve various pf statistics\n     * @return mixed\n     */"},{"name":"pfStates","method":"GET","parameters":[],"doc":"/**\n     * retrieve pf state amount and states limit\n     */"}],"model":null,"is_abstract":false,"doc":"/**\n * Class FirewallController\n * @package OPNsense\\Diagnostics\\Api\n */"},"OPNsense\\Diagnostics\\Api\\InterfaceController":{"name":"OPNsense\\Diagnostics\\Api\\InterfaceController","namespace":"OPNsense\\Diagnostics\\Api","parent":"OPNsense\\Base\\ApiControllerBase","methods":[{"name":"getInterfaceNames","method":"GET","parameters":[],"doc":"/**\n     * retrieve interface name mapping\n     * @return array interface mapping (raw interface to description)\n     */"},{"name":"getArp","method":"GET","parameters":[],"doc":"/**\n     * retrieve system arp table contents\n     * @return array\n     */"},{"name":"searchArp","method":"GET","parameters":[],"doc":"/**\n     * search wrapper around getArpAction\n     * @return array\n     */"},{"name":"flushArp","method":"POST","parameters":[],"doc":"/**\n     * retrieve system arp table contents\n     * @return array\n     */"},{"name":"getNdp","method":"GET","parameters":[],"doc":"/**\n     * retrieve system ndp table contents\n     * @return array\n     */"},{"name":"searchNdp","method":"GET","parameters":[],"doc":"/**\n     * search wrapper around getNdpAction\n     * @return array\n     */"},{"name":"getRoutes","method":"GET","parameters":[],"doc":"/**\n     * retrieve system routing table\n     * @return mixed\n     */"},{"name":"delRoute","method":"POST","parameters":[],"doc":"/**\n     * drop route\n     * @return mixed\n     */"},{"name":"getProtocolStatistics","method":"GET","parameters":[],"doc":"/**\n     * retrieve system-wide statistics for each network protocol\n     * @return mixed\n     */"},{"name":"getInterfaceStatistics","method":"GET","parameters":[],"doc":"/**\n     * retrieve system-wide statistics for each network adapter\n     * @return mixed\n     */"},{"name":"getInterfaceConfig","method":"GET","parameters":[],"doc":"/**\n     * retrieve status/config for each network adapter\n     * @return mixed\n     */"},{"name":"getVipStatus","method":"POST","parameters":[],"doc":"/**\n     * retrieve virtual ip status (carp)\n     */"},{"name":"CarpStatus","method":"POST","parameters":[{"name":"status","has_default":false,"default":null}],"doc":"/**\n     * set new carp node status (enable, disable, maintenance)\n     * @return array\n     */"},{"name":"getPfsyncNodes","method":"GET","parameters":[],"doc":false},{"name":"getSocketStatistics","method":"GET","parameters":[],"doc":"/**\n     * retrieve system-wide socket statistics (merge netstat with sockstat)\n     * @return mixed\n     */"},{"name":"getMemoryStatistics","method":"GET","parameters":[],"doc":"/**\n     * retrieve statistics recorded by the memory management routines\n     * @return mixed\n     */"},{"name":"getBpfStatistics","method":"GET","parameters":[],"doc":"/**\n     * retrieve bpf(4) peers statistics\n     * @return mixed\n     */"},{"name":"getNetisrStatistics","method":"GET","parameters":[],"doc":"/**\n     * retrieve netisr(9) statistics\n     * @return mixed\n     */"}],"model":null,"is_abstract":false,"doc":"/**\n * Class InterfaceController\n * @package OPNsense\\Diagnostics\\Api\n */"},"OPNsense\\Diagnostics\\Api\\LogController":{"name":"OPNsense\\Diagnostics\\Api\\LogController","namespace":"OPNsense\\Diagnostics\\Api","parent":"OPNsense\\Base\\ApiControllerBase","methods":[],"model":null,"is_abstract":false,"doc":"/**\n * @inherit\n */"},"OPNsense\\Diagnostics\\Api\\LvtemplateController":{"name":"OPNsense\\Diagnostics\\Api\\LvtemplateController","namespace":"OPNsense\\Diagnostics\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"searchItem","method":"*","parameters":[],"doc":false},{"name":"setItem","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"addItem","method":"POST","parameters":[],"doc":false},{"name":"getItem","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"delItem","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false}],"model":"OPNsense\\Diagnostics\\Lvtemplate","is_abstract":false,"doc":false},"OPNsense\\Diagnostics\\Api\\NetflowController":{"name":"OPNsense\\Diagnostics\\Api\\NetflowController","namespace":"OPNsense\\Diagnostics\\Api","parent":"OPNsense\\Base\\ApiControllerBase","methods":[{"name":"isEnabled","method":"GET","parameters":[],"doc":"/**\n     *\n     */"},{"name":"getconfig","method":"GET","parameters":[],"doc":"/**\n     * retrieve Netflow settings\n     * @return array\n     */"},{"name":"setconfig","method":"POST","parameters":[],"doc":"/**\n     * update netflow configuration fields\n     * @return array\n     * @throws \\OPNsense\\Base\\ValidationException\n     */"},{"name":"reconfigure","method":"POST","parameters":[],"doc":"/**\n     * configure start/stop netflow\n     * @return array\n     */"},{"name":"status","method":"GET","parameters":[],"doc":"/**\n     * request netflow status\n     * @return array\n     */"},{"name":"cacheStats","method":"GET","parameters":[],"doc":"/**\n     * Retrieve netflow cache statistics\n     * @return array cache statistics per netgraph node\n     */"}],"model":null,"is_abstract":false,"doc":"/**\n * Class NetflowController\n * @package OPNsense\\Netflow\n */"},"OPNsense\\Diagnostics\\Api\\NetworkinsightController":{"name":"OPNsense\\Diagnostics\\Api\\NetworkinsightController","namespace":"OPNsense\\Diagnostics\\Api","parent":"OPNsense\\Base\\ApiControllerBase","methods":[{"name":"timeserie","method":"GET","parameters":[{"name":"provider","has_default":true,"default":null},{"name":"measure","has_default":true,"default":null},{"name":"from_date","has_default":true,"default":null},{"name":"to_date","has_default":true,"default":null},{"name":"resolution","has_default":true,"default":null},{"name":"field","has_default":true,"default":null},{"name":"emulation","has_default":true,"default":null}],"doc":"/**\n     * request timeserie data to use for reporting\n     * @param string $provider provider class name\n     * @param string $measure measure [octets, packets, octets_ps, packets_ps]\n     * @param string $from_date from timestamp\n     * @param string $to_date to timestamp\n     * @param string $resolution resolution in seconds\n     * @param string $field field name to aggregate\n     * @param null $emulation\n     * @return array timeseries\n     */"},{"name":"top","method":"GET","parameters":[{"name":"provider","has_default":true,"default":null},{"name":"from_date","has_default":true,"default":null},{"name":"to_date","has_default":true,"default":null},{"name":"field","has_default":true,"default":null},{"name":"measure","has_default":true,"default":null},{"name":"max_hits","has_default":true,"default":null}],"doc":"/**\n     * request top usage data (for reporting), values can optionally be filtered using filter_field and filter_value\n     * @param string $provider provider class name\n     * @param string $from_date from timestamp\n     * @param string $to_date to timestamp\n     * @param string $field field name(s) to aggregate\n     * @param string $measure measure [octets, packets]\n     * @param string $max_hits maximum number of results\n     * @return array timeseries\n     */"},{"name":"getMetadata","method":"GET","parameters":[],"doc":"/**\n     * get metadata from backend aggregation process\n     * @return array timeseries\n     */"},{"name":"getInterfaces","method":"GET","parameters":[],"doc":"/**\n     * return interface map (device / name)\n     * @return array interfaces\n     */"},{"name":"getProtocols","method":"GET","parameters":[],"doc":"/**\n     * return known protocols\n     */"},{"name":"getServices","method":"GET","parameters":[],"doc":"/**\n     * return known services\n     */"},{"name":"export","method":"GET","parameters":[{"name":"provider","has_default":true,"default":null},{"name":"from_date","has_default":true,"default":null},{"name":"to_date","has_default":true,"default":null},{"name":"resolution","has_default":true,"default":null}],"doc":"/**\n     * request timeserie data to use for reporting\n     * @param string $provider provider class name\n     * @param string $from_date from timestamp\n     * @param string $to_date to timestamp\n     * @param string $resolution resolution in seconds\n     * @return string csv output\n     */"}],"model":null,"is_abstract":false,"doc":"/**\n * Class NetworkinsightController\n * @package OPNsense\\Netflow\n */"},"OPNsense\\Diagnostics\\Api\\PacketCaptureController":{"name":"OPNsense\\Diagnostics\\Api\\PacketCaptureController","namespace":"OPNsense\\Diagnostics\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"set","method":"GET","parameters":[],"doc":"/**\n     * set / create capture job\n     */"},{"name":"start","method":"POST","parameters":[{"name":"jobid","has_default":false,"default":null}],"doc":"/**\n     * start capture job\n     */"},{"name":"stop","method":"POST","parameters":[{"name":"jobid","has_default":false,"default":null}],"doc":"/**\n     * stop capture job\n     */"},{"name":"remove","method":"POST","parameters":[{"name":"jobid","has_default":false,"default":null}],"doc":"/**\n     * remove capture job\n     */"},{"name":"view","method":"GET","parameters":[{"name":"jobid","has_default":false,"default":null},{"name":"detail","has_default":true,"default":"normal"}],"doc":"/**\n     * view capture\n     */"},{"name":"download","method":"GET","parameters":[{"name":"jobid","has_default":false,"default":null}],"doc":"/**\n     * download pcap(s)\n     */"},{"name":"macInfo","method":"GET","parameters":[{"name":"macaddr","has_default":false,"default":null}],"doc":"/**\n     * fetch mac info\n     */"},{"name":"searchJobs","method":"GET","parameters":[],"doc":"/**\n     * search current capture jobs\n     */"}],"model":"OPNsense\\Diagnostics\\PacketCapture","is_abstract":false,"doc":false},"OPNsense\\Diagnostics\\Api\\PortprobeController":{"name":"OPNsense\\Diagnostics\\Api\\PortprobeController","namespace":"OPNsense\\Diagnostics\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"set","method":"GET","parameters":[],"doc":false}],"model":"OPNsense\\Diagnostics\\Portprobe","is_abstract":false,"doc":false},"OPNsense\\Diagnostics\\Api\\SystemController":{"name":"OPNsense\\Diagnostics\\Api\\SystemController","namespace":"OPNsense\\Diagnostics\\Api","parent":"OPNsense\\Base\\ApiControllerBase","methods":[{"name":"memory","method":"GET","parameters":[],"doc":false},{"name":"systemInformation","method":"GET","parameters":[],"doc":false},{"name":"systemTime","method":"GET","parameters":[],"doc":false},{"name":"systemResources","method":"GET","parameters":[],"doc":false},{"name":"systemDisk","method":"GET","parameters":[],"doc":false},{"name":"systemMbuf","method":"GET","parameters":[],"doc":false},{"name":"systemSwap","method":"GET","parameters":[],"doc":false},{"name":"systemTemperature","method":"GET","parameters":[],"doc":false}],"model":null,"is_abstract":false,"doc":"/**\n * Class SystemController\n * @package OPNsense\\Diagnostics\\Api\n */"},"OPNsense\\Diagnostics\\Api\\SystemhealthController":{"name":"OPNsense\\Diagnostics\\Api\\SystemhealthController","namespace":"OPNsense\\Diagnostics\\Api","parent":"OPNsense\\Base\\ApiControllerBase","methods":[{"name":"getRRDlist","method":"GET","parameters":[],"doc":"/**\n     * retrieve Available RRD data\n     * @return array\n     */"},{"name":"getSystemHealth","method":"GET","parameters":[{"name":"rrd","has_default":true,"default":""},{"name":"detail","has_default":true,"default":-1}],"doc":"/**\n     * retrieve SystemHealth Data (previously called RRD Graphs)\n     *\n     * @param string $rrd\n     * @param int $detail\n     * @return array\n     */"},{"name":"getInterfaces","method":"GET","parameters":[],"doc":"/**\n     * Retrieve network interfaces by key (lan, wan, opt1,..)\n     * @return array\n     */"},{"name":"exportAsCSV","method":"GET","parameters":[{"name":"rrd","has_default":true,"default":""},{"name":"detail","has_default":true,"default":-1}],"doc":false}],"model":null,"is_abstract":false,"doc":"/**\n * Class SystemhealthController\n * @package OPNsense\\SystemHealth\n */"},"OPNsense\\Diagnostics\\Api\\TracerouteController":{"name":"OPNsense\\Diagnostics\\Api\\TracerouteController","namespace":"OPNsense\\Diagnostics\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"set","method":"GET","parameters":[],"doc":false}],"model":"OPNsense\\Diagnostics\\Traceroute","is_abstract":false,"doc":false},"OPNsense\\Diagnostics\\Api\\TrafficController":{"name":"OPNsense\\Diagnostics\\Api\\TrafficController","namespace":"OPNsense\\Diagnostics\\Api","parent":"OPNsense\\Base\\ApiControllerBase","methods":[{"name":"Interface","method":"GET","parameters":[],"doc":"/**\n     * retrieve interface traffic stats\n     * @return array\n     */"},{"name":"stream","method":"GET","parameters":[{"name":"poll_interval","has_default":true,"default":1}],"doc":false},{"name":"Top","method":"GET","parameters":[{"name":"interfaces","has_default":false,"default":null}],"doc":"/**\n     * retrieve interface top traffic hosts\n     * @param $interfaces string comma separated list of interfaces\n     * @return array\n     */"}],"model":null,"is_abstract":false,"doc":"/**\n * Class TrafficController\n * @package OPNsense\\Diagnostics\\Api\n */"},"OPNsense\\Diagnostics\\Api\\PingController":{"name":"OPNsense\\Diagnostics\\Api\\PingController","namespace":"OPNsense\\Diagnostics\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"set","method":"GET","parameters":[],"doc":"/**\n     * set / create ping job\n     */"},{"name":"start","method":"POST","parameters":[{"name":"jobid","has_default":false,"default":null}],"doc":"/**\n     * start ping job\n     */"},{"name":"stop","method":"POST","parameters":[{"name":"jobid","has_default":false,"default":null}],"doc":"/**\n     * stop ping job\n     */"},{"name":"remove","method":"POST","parameters":[{"name":"jobid","has_default":false,"default":null}],"doc":"/**\n     * remove ping job\n     */"},{"name":"searchJobs","method":"GET","parameters":[],"doc":"/**\n     * search current ping jobs\n     */"}],"model":"OPNsense\\Diagnostics\\Ping","is_abstract":false,"doc":false},"OPNsense\\Dnsmasq\\Api\\LeasesController":{"name":"OPNsense\\Dnsmasq\\Api\\LeasesController","namespace":"OPNsense\\Dnsmasq\\Api","parent":"OPNsense\\Base\\ApiControllerBase","methods":[{"name":"search","method":"GET","parameters":[],"doc":false}],"model":null,"is_abstract":false,"doc":false},"OPNsense\\Dnsmasq\\Api\\ServiceController":{"name":"OPNsense\\Dnsmasq\\Api\\ServiceController","namespace":"OPNsense\\Dnsmasq\\Api","parent":"OPNsense\\Base\\ApiMutableServiceControllerBase","methods":[{"name":"start","method":"POST","parameters":[],"doc":"/**\n     * start service\n     * @return array\n     * @throws \\Exception when configd action fails\n     */"},{"name":"stop","method":"POST","parameters":[],"doc":"/**\n     * stop service\n     * @return array\n     * @throws \\Exception when configd actions fails\n     */"},{"name":"restart","method":"POST","parameters":[],"doc":"/**\n     * restart service\n     * @return array\n     * @throws \\Exception\n     */"},{"name":"reconfigure","method":"POST","parameters":[],"doc":"/**\n     * reconfigure with optional stop, generate config and start / reload\n     * @return array response message\n     * @throws \\Exception when configd action fails\n     * @throws \\ReflectionException when model can't be instantiated\n     */"},{"name":"status","method":"GET","parameters":[],"doc":"/**\n     * retrieve status of service\n     * @return array response message\n     * @throws \\Exception when configd action fails\n     */"}],"model":null,"is_abstract":false,"doc":"/**\n * Class ServiceController\n * @package OPNsense\\Dnsmasq\n */"},"OPNsense\\Dnsmasq\\Api\\SettingsController":{"name":"OPNsense\\Dnsmasq\\Api\\SettingsController","namespace":"OPNsense\\Dnsmasq\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * @inheritdoc\n     */"},{"name":"searchHost","method":"*","parameters":[],"doc":false},{"name":"getHost","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"setHost","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"addHost","method":"POST","parameters":[],"doc":false},{"name":"delHost","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"downloadHosts","method":"GET","parameters":[],"doc":false},{"name":"uploadHosts","method":"POST","parameters":[],"doc":false},{"name":"searchDomain","method":"*","parameters":[],"doc":false},{"name":"getDomain","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"setDomain","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"addDomain","method":"POST","parameters":[],"doc":false},{"name":"delDomain","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"searchTag","method":"*","parameters":[],"doc":false},{"name":"getTag","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"setTag","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"addTag","method":"POST","parameters":[],"doc":false},{"name":"delTag","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"searchRange","method":"*","parameters":[],"doc":false},{"name":"getRange","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"setRange","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"addRange","method":"POST","parameters":[],"doc":false},{"name":"delRange","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"searchOption","method":"*","parameters":[],"doc":false},{"name":"getOption","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"setOption","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"addOption","method":"POST","parameters":[],"doc":false},{"name":"delOption","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"searchMatch","method":"*","parameters":[],"doc":false},{"name":"getMatch","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"setMatch","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"addMatch","method":"POST","parameters":[],"doc":false},{"name":"delMatch","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"searchBoot","method":"*","parameters":[],"doc":false},{"name":"getBoot","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"setBoot","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"addBoot","method":"POST","parameters":[],"doc":false},{"name":"delBoot","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false}],"model":"\\OPNsense\\Dnsmasq\\Dnsmasq","is_abstract":false,"doc":false},"OPNsense\\Firewall\\Api\\AliasUtilController":{"name":"OPNsense\\Firewall\\Api\\AliasUtilController","namespace":"OPNsense\\Firewall\\Api","parent":"OPNsense\\Base\\ApiControllerBase","methods":[{"name":"aliases","method":"GET","parameters":[],"doc":"/**\n     * list active alias tables\n     * @return array alias names\n     */"},{"name":"list","method":"POST","parameters":[{"name":"alias","has_default":false,"default":null}],"doc":"/**\n     * list alias table\n     * @param string $alias name to list\n     * @return array alias contents\n     * @throws \\Exception\n     */"},{"name":"updateBogons","method":"GET","parameters":[],"doc":"/**\n     * update bogons table\n     * @return array status\n     */"},{"name":"flush","method":"POST","parameters":[{"name":"alias","has_default":false,"default":null}],"doc":"/**\n     * flush alias table\n     * @param string $alias name to flush\n     * @return array status\n     */"},{"name":"delete","method":"POST","parameters":[{"name":"alias","has_default":false,"default":null}],"doc":"/**\n     * delete item from alias table\n     * @param string $alias name\n     * @return array status\n     */"},{"name":"add","method":"POST","parameters":[{"name":"alias","has_default":false,"default":null}],"doc":"/**\n     * add item to alias table\n     * @param string $alias name\n     * @return array status\n     */"},{"name":"findReferences","method":"POST","parameters":[],"doc":"/**\n     * API handler to look up in which rules an IP is used (either explicitly or included in a range).\n     *\n     * @return array Array with indexes 'status' (whether the call succeeded) and 'matches' (which rules match this IP,\n     *               only present if the call was successful.)\n     * @throws \\Exception\n     */"}],"model":null,"is_abstract":false,"doc":"/**\n * @package OPNsense\\Firewall\n */"},"OPNsense\\Firewall\\Api\\CategoryController":{"name":"OPNsense\\Firewall\\Api\\CategoryController","namespace":"OPNsense\\Firewall\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"searchItem","method":"*","parameters":[{"name":"add_empty","has_default":true,"default":"0"}],"doc":"/**\n     * search categories\n     * @return array search results\n     * @throws \\ReflectionException\n     */"},{"name":"setItem","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":"/**\n     * Update category with given properties\n     * @param string $uuid internal id\n     * @return array save result + validation output\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"addItem","method":"POST","parameters":[],"doc":"/**\n     * Add new category and set with attributes from post\n     * @return array save result + validation output\n     * @throws \\OPNsense\\Base\\ModelException when not bound to model\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"getItem","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":"/**\n     * Retrieve category settings or return defaults for new one\n     * @param $uuid item unique id\n     * @return array category content\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"delItem","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":"/**\n     * Delete alias by uuid, save contents to tmp for removal on apply\n     * @param string $uuid internal id\n     * @return array save status\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     * @throws \\OPNsense\\Base\\UserException when unable to delete\n     */"}],"model":"OPNsense\\Firewall\\Category","is_abstract":false,"doc":"/**\n * @package OPNsense\\Firewall\n */"},"OPNsense\\Firewall\\Api\\FilterBaseController":{"name":"OPNsense\\Firewall\\Api\\FilterBaseController","namespace":"OPNsense\\Firewall\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"listCategories","method":"GET","parameters":[],"doc":"/**\n     * list categories and usage\n     * @return array\n     */"},{"name":"listNetworkSelectOptions","method":"GET","parameters":[],"doc":"/**\n     * list of available network options\n     * @return array\n     */"},{"name":"apply","method":"POST","parameters":[{"name":"rollback_revision","has_default":true,"default":null}],"doc":false},{"name":"cancelRollback","method":"POST","parameters":[{"name":"rollback_revision","has_default":false,"default":null}],"doc":false},{"name":"savepoint","method":"POST","parameters":[],"doc":false},{"name":"revert","method":"POST","parameters":[{"name":"revision","has_default":false,"default":null}],"doc":false}],"model":"OPNsense\\Firewall\\Filter","is_abstract":true,"doc":"/**\n * Class FilterBaseController implements actions for various types\n * @package OPNsense\\Firewall\\Api\n */"},"OPNsense\\Firewall\\Api\\FilterController":{"name":"OPNsense\\Firewall\\Api\\FilterController","namespace":"OPNsense\\Firewall\\Api","parent":"OPNsense\\Firewall\\Api\\FilterBaseController","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"listCategories","method":"GET","parameters":[],"doc":"/**\n     * list categories and usage\n     * @return array\n     */"},{"name":"listNetworkSelectOptions","method":"GET","parameters":[],"doc":"/**\n     * list of available network options\n     * @return array\n     */"},{"name":"apply","method":"POST","parameters":[{"name":"rollback_revision","has_default":true,"default":null}],"doc":false},{"name":"cancelRollback","method":"POST","parameters":[{"name":"rollback_revision","has_default":false,"default":null}],"doc":false},{"name":"savepoint","method":"POST","parameters":[],"doc":false},{"name":"revert","method":"POST","parameters":[{"name":"revision","has_default":false,"default":null}],"doc":false},{"name":"searchRule","method":"*","parameters":[],"doc":false},{"name":"setRule","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"addRule","method":"POST","parameters":[],"doc":false},{"name":"getRule","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"delRule","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"toggleRule","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null},{"name":"enabled","has_default":true,"default":null}],"doc":false}],"model":"OPNsense\\Firewall\\Filter","is_abstract":false,"doc":false},"OPNsense\\Firewall\\Api\\FilterUtilController":{"name":"OPNsense\\Firewall\\Api\\FilterUtilController","namespace":"OPNsense\\Firewall\\Api","parent":"OPNsense\\Base\\ApiControllerBase","methods":[{"name":"ruleStats","method":"GET","parameters":[],"doc":"/**\n     * return rule statistics\n     * @return array statistics\n     */"}],"model":null,"is_abstract":false,"doc":"/**\n * @package OPNsense\\Firewall\n */"},"OPNsense\\Firewall\\Api\\GroupController":{"name":"OPNsense\\Firewall\\Api\\GroupController","namespace":"OPNsense\\Firewall\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"searchItem","method":"*","parameters":[],"doc":"/**\n     * search groups\n     * @return array search results\n     * @throws \\ReflectionException\n     */"},{"name":"setItem","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":"/**\n     * Update group with given properties\n     * @param string $uuid internal id\n     * @return array save result + validation output\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"addItem","method":"POST","parameters":[],"doc":"/**\n     * Add new group and set with attributes from post\n     * @return array save result + validation output\n     * @throws \\OPNsense\\Base\\ModelException when not bound to model\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"getItem","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":"/**\n     * Retrieve group settings or return defaults for new one\n     * @param $uuid item unique id\n     * @return array group content\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"delItem","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":"/**\n     * Delete alias by uuid, save contents to tmp for removal on apply\n     * @param string $uuid internal id\n     * @return array save status\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     * @throws \\OPNsense\\Base\\UserException when unable to delete\n     */"},{"name":"reconfigure","method":"POST","parameters":[],"doc":"/**\n     * reconfigure groups\n     */"}],"model":"OPNsense\\Firewall\\Group","is_abstract":false,"doc":"/**\n * @package OPNsense\\Firewall\n */"},"OPNsense\\Firewall\\Api\\NptController":{"name":"OPNsense\\Firewall\\Api\\NptController","namespace":"OPNsense\\Firewall\\Api","parent":"OPNsense\\Firewall\\Api\\FilterBaseController","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"listCategories","method":"GET","parameters":[],"doc":"/**\n     * list categories and usage\n     * @return array\n     */"},{"name":"listNetworkSelectOptions","method":"GET","parameters":[],"doc":"/**\n     * list of available network options\n     * @return array\n     */"},{"name":"apply","method":"POST","parameters":[{"name":"rollback_revision","has_default":true,"default":null}],"doc":false},{"name":"cancelRollback","method":"POST","parameters":[{"name":"rollback_revision","has_default":false,"default":null}],"doc":false},{"name":"savepoint","method":"POST","parameters":[],"doc":false},{"name":"revert","method":"POST","parameters":[{"name":"revision","has_default":false,"default":null}],"doc":false},{"name":"searchRule","method":"*","parameters":[],"doc":false},{"name":"setRule","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"addRule","method":"POST","parameters":[],"doc":false},{"name":"getRule","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"delRule","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"toggleRule","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null},{"name":"enabled","has_default":true,"default":null}],"doc":false}],"model":"OPNsense\\Firewall\\Filter","is_abstract":false,"doc":false},"OPNsense\\Firewall\\Api\\OneToOneController":{"name":"OPNsense\\Firewall\\Api\\OneToOneController","namespace":"OPNsense\\Firewall\\Api","parent":"OPNsense\\Firewall\\Api\\FilterBaseController","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"listCategories","method":"GET","parameters":[],"doc":"/**\n     * list categories and usage\n     * @return array\n     */"},{"name":"listNetworkSelectOptions","method":"GET","parameters":[],"doc":"/**\n     * list of available network options\n     * @return array\n     */"},{"name":"apply","method":"POST","parameters":[{"name":"rollback_revision","has_default":true,"default":null}],"doc":false},{"name":"cancelRollback","method":"POST","parameters":[{"name":"rollback_revision","has_default":false,"default":null}],"doc":false},{"name":"savepoint","method":"POST","parameters":[],"doc":false},{"name":"revert","method":"POST","parameters":[{"name":"revision","has_default":false,"default":null}],"doc":false},{"name":"searchRule","method":"*","parameters":[],"doc":false},{"name":"setRule","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"addRule","method":"POST","parameters":[],"doc":false},{"name":"getRule","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"delRule","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"toggleRule","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null},{"name":"enabled","has_default":true,"default":null}],"doc":false}],"model":"OPNsense\\Firewall\\Filter","is_abstract":false,"doc":false},"OPNsense\\Firewall\\Api\\SourceNatController":{"name":"OPNsense\\Firewall\\Api\\SourceNatController","namespace":"OPNsense\\Firewall\\Api","parent":"OPNsense\\Firewall\\Api\\FilterBaseController","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"listCategories","method":"GET","parameters":[],"doc":"/**\n     * list categories and usage\n     * @return array\n     */"},{"name":"listNetworkSelectOptions","method":"GET","parameters":[],"doc":"/**\n     * list of available network options\n     * @return array\n     */"},{"name":"apply","method":"POST","parameters":[{"name":"rollback_revision","has_default":true,"default":null}],"doc":false},{"name":"cancelRollback","method":"POST","parameters":[{"name":"rollback_revision","has_default":false,"default":null}],"doc":false},{"name":"savepoint","method":"POST","parameters":[],"doc":false},{"name":"revert","method":"POST","parameters":[{"name":"revision","has_default":false,"default":null}],"doc":false},{"name":"searchRule","method":"*","parameters":[],"doc":false},{"name":"setRule","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"addRule","method":"POST","parameters":[],"doc":false},{"name":"getRule","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"delRule","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"toggleRule","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null},{"name":"enabled","has_default":true,"default":null}],"doc":false}],"model":"OPNsense\\Firewall\\Filter","is_abstract":false,"doc":false},"OPNsense\\Firewall\\Api\\AliasController":{"name":"OPNsense\\Firewall\\Api\\AliasController","namespace":"OPNsense\\Firewall\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"searchItem","method":"*","parameters":[],"doc":"/**\n     * search aliases\n     * @return array search results\n     * @throws \\ReflectionException\n     */"},{"name":"listCategories","method":"GET","parameters":[],"doc":"/**\n     * list categories and usage\n     * @return array\n     */"},{"name":"setItem","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":"/**\n     * Update alias with given properties\n     * @param string $uuid internal id\n     * @return array save result + validation output\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"addItem","method":"POST","parameters":[],"doc":"/**\n     * Add new alias and set with attributes from post\n     * @return array save result + validation output\n     * @throws \\OPNsense\\Base\\ModelException when not bound to model\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"getItem","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":"/**\n     * Retrieve alias settings or return defaults for new one\n     * @param $uuid item unique id\n     * @return array alias content\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"getAliasUUID","method":"GET","parameters":[{"name":"name","has_default":false,"default":null}],"doc":"/**\n     * find the alias uuid by name\n     * @param $name alias name\n     * @return array uuid\n     * @throws \\ReflectionException\n     */"},{"name":"delItem","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":"/**\n     * Delete alias by uuid, save contents to tmp for removal on apply\n     * @param string $uuid internal id\n     * @return array save status\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     * @throws \\OPNsense\\Base\\UserException when unable to delete\n     */"},{"name":"toggleItem","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null},{"name":"enabled","has_default":true,"default":null}],"doc":"/**\n     * toggle status\n     * @param string $uuid id to toggled\n     * @param string|null $enabled set enabled by default\n     * @return array status\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"listCountries","method":"GET","parameters":[],"doc":"/**\n     * list countries and regions\n     * @return array indexed by country code\n     */"},{"name":"listUserGroups","method":"GET","parameters":[],"doc":"/**\n     * list user groups\n     * @return array user groups\n     */"},{"name":"listNetworkAliases","method":"GET","parameters":[],"doc":"/**\n     * list network alias types\n     * @return array indexed by country alias name\n     */"},{"name":"reconfigure","method":"POST","parameters":[],"doc":"/**\n     * reconfigure aliases\n     */"},{"name":"getTableSize","method":"GET","parameters":[],"doc":"/**\n     * get aliases load stats and table-entries limit\n     */"},{"name":"export","method":"GET","parameters":[],"doc":"/**\n     * export configured aliases\n     */"},{"name":"import","method":"POST","parameters":[],"doc":"/**\n     * import delivered aliases in post variable \"data\", validate all only commit when fully valid.\n     */"},{"name":"getGeoIP","method":"GET","parameters":[],"doc":"/**\n     * get geoip settings (and stats)\n     */"}],"model":"OPNsense\\Firewall\\Alias","is_abstract":false,"doc":"/**\n * @package OPNsense\\Firewall\n */"},"OPNsense\\IDS\\Api\\ServiceController":{"name":"OPNsense\\IDS\\Api\\ServiceController","namespace":"OPNsense\\IDS\\Api","parent":"OPNsense\\Base\\ApiMutableServiceControllerBase","methods":[{"name":"start","method":"POST","parameters":[],"doc":"/**\n     * start service\n     * @return array\n     * @throws \\Exception when configd action fails\n     */"},{"name":"stop","method":"POST","parameters":[],"doc":"/**\n     * stop service\n     * @return array\n     * @throws \\Exception when configd actions fails\n     */"},{"name":"restart","method":"POST","parameters":[],"doc":"/**\n     * restart service\n     * @return array\n     * @throws \\Exception\n     */"},{"name":"reconfigure","method":"POST","parameters":[],"doc":"/**\n     * reconfigure with optional stop, generate config and start / reload\n     * @return array response message\n     * @throws \\Exception when configd action fails\n     * @throws \\ReflectionException when model can't be instantiated\n     */"},{"name":"status","method":"GET","parameters":[],"doc":"/**\n     * retrieve status of service\n     * @return array response message\n     * @throws \\Exception when configd action fails\n     */"},{"name":"reconfigure","method":"POST","parameters":[],"doc":"/**\n     * Reconfigure IDS\n     * @return array result status\n     * @throws \\Exception when configd action fails\n     * @throws \\OPNsense\\Base\\ModelException when unable to construct model\n     * @throws \\OPNsense\\Base\\ValidationException when one or more model validations fail\n     */"},{"name":"updateRules","method":"POST","parameters":[{"name":"wait","has_default":true,"default":null}],"doc":"/**\n     * Download and update rules\n     * @param null|string $wait wait for update to complete (default) or run in background and return message id\n     * @return array result status\n     * @throws \\Exception when configd action fails\n     */"},{"name":"reloadRules","method":"POST","parameters":[],"doc":"/**\n     * Flush rule configuration to config and reload suricata ruleset (graceful restart)\n     * @return array\n     * @throws \\Exception when configd action fails\n     */"},{"name":"queryAlerts","method":"POST","parameters":[],"doc":"/**\n     * Query suricata alerts\n     * @return array\n     * @throws \\Exception when configd action fails\n     */"},{"name":"getAlertInfo","method":"GET","parameters":[{"name":"alertId","has_default":false,"default":null},{"name":"fileid","has_default":true,"default":""}],"doc":"/**\n     * Fetch alert detailed info\n     * @param string $alertId alert id, position in log file\n     * @param string $fileid log file id number (empty for standard)\n     * @return array alert info\n     * @throws \\Exception when configd action fails\n     */"},{"name":"getAlertLogs","method":"GET","parameters":[],"doc":"/**\n     * List all available logs\n     * @return array list of alert logs\n     * @throws \\Exception when configd action fails\n     */"},{"name":"dropAlertLog","method":"POST","parameters":[],"doc":"/**\n     * Drop alert log\n     * @return array result status\n     * @throws \\Exception when configd action fails\n     */"}],"model":null,"is_abstract":false,"doc":"/**\n * Class ServiceController\n * @package OPNsense\\IDS\n */"},"OPNsense\\IDS\\Api\\SettingsController":{"name":"OPNsense\\IDS\\Api\\SettingsController","namespace":"OPNsense\\IDS\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"searchInstalledRules","method":"POST","parameters":[],"doc":"/**\n     * Search installed ids rules\n     * @return array query results\n     * @throws \\Exception when configd action fails\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"getRuleInfo","method":"GET","parameters":[{"name":"sid","has_default":true,"default":null}],"doc":"/**\n     * Get rule information\n     * @param string|null $sid rule identifier\n     * @return array|mixed\n     * @throws \\Exception when configd action fails\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"listRuleMetadata","method":"GET","parameters":[],"doc":"/**\n     * List available rule metadata\n     * @return array\n     * @throws \\Exception when configd action fails\n     */"},{"name":"getRulesetproperties","method":"GET","parameters":[],"doc":"/**\n     * List ruleset properties\n     * @return array result status\n     * @throws \\Exception when config actions fails\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"setRulesetproperties","method":"POST","parameters":[],"doc":"/**\n     * Update ruleset properties\n     * @return array result status\n     * @throws \\Exception when config action fails\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"listRulesets","method":"GET","parameters":[],"doc":"/**\n     * List all installable rules including current status\n     * @return array|mixed list of items when $id is null otherwise the selected item is returned\n     * @throws \\Exception\n     */"},{"name":"getRuleset","method":"GET","parameters":[{"name":"id","has_default":false,"default":null}],"doc":"/**\n     * Get ruleset list info (file)\n     * @param string $id list filename\n     * @return array|mixed list details\n     * @throws \\Exception when configd action fails\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"setRuleset","method":"POST","parameters":[{"name":"filename","has_default":false,"default":null}],"doc":"/**\n     * Set ruleset attributes\n     * @param $filename rule filename (key)\n     * @return array result status\n     * @throws \\Exception when configd action fails\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"toggleRuleset","method":"POST","parameters":[{"name":"filenames","has_default":false,"default":null},{"name":"enabled","has_default":true,"default":null}],"doc":"/**\n     * Toggle usage of rule file or set enabled / disabled depending on parameters\n     * @param $filenames (target) rule file name, or list of filenames separated by a comma\n     * @param $enabled desired state enabled(1)/disabled(1), leave empty for toggle\n     * @return array status 0/1 or error\n     * @throws \\Exception\n     * @throws \\OPNsense\\Base\\ValidationException\n     */"},{"name":"toggleRule","method":"POST","parameters":[{"name":"sids","has_default":false,"default":null},{"name":"enabled","has_default":true,"default":null}],"doc":"/**\n     * Toggle rule enable status\n     * @param string $sids unique id\n     * @param string|int $enabled desired state enabled(1)/disabled(1), leave empty for toggle\n     * @return array empty\n     * @throws \\Exception when configd action fails\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"setRule","method":"POST","parameters":[{"name":"sid","has_default":false,"default":null}],"doc":"/**\n     * Set rule action\n     * @param $sid item unique id\n     * @return array result status\n     * @throws \\Exception when configd action fails\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"searchUserRule","method":"*","parameters":[],"doc":"/**\n     * Search user defined rules\n     * @return array list of found user rules\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"setUserRule","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":"/**\n     * Update user defined rules\n     * @param string $uuid internal id\n     * @return array save result + validation output\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"addUserRule","method":"POST","parameters":[],"doc":"/**\n     * Add new user defined rule\n     * @return array save result + validation output\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"getUserRule","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":"/**\n     * Get properties of user defined rule\n     * @param null|string $uuid user rule internal id\n     * @return array user defined properties\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"delUserRule","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":"/**\n     * Delete user rule item\n     * @param string $uuid user rule internal id\n     * @return array save status\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"toggleUserRule","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null},{"name":"enabled","has_default":true,"default":null}],"doc":"/**\n     * Toggle user defined rule by uuid (enable/disable)\n     * @param $uuid user defined rule internal id\n     * @param $enabled desired state enabled(1)/disabled(1), leave empty for toggle\n     * @return array save result\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"searchPolicy","method":"*","parameters":[],"doc":"/**\n     * Search policy\n     * @return array list of found user rules\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"setPolicy","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":"/**\n     * Update policy\n     * @param string $uuid internal id\n     * @return array save result + validation output\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"addPolicy","method":"POST","parameters":[],"doc":"/**\n     * Add new policy\n     * @return array save result + validation output\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"getPolicy","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":"/**\n     * Get properties of a policy\n     * @param null|string $uuid user rule internal id\n     * @return array user defined properties\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"delPolicy","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":"/**\n     * Delete policy item\n     * @param string $uuid user rule internal id\n     * @return array save status\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"togglePolicy","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null},{"name":"enabled","has_default":true,"default":null}],"doc":"/**\n     * Toggle policy by uuid (enable/disable)\n     * @param $uuid user defined rule internal id\n     * @param $enabled desired state enabled(1)/disabled(1), leave empty for toggle\n     * @return array save result\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"searchPolicyRule","method":"*","parameters":[],"doc":"/**\n     * Search policy rule adjustment\n     * @return array list of found user rules\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"setPolicyRule","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":"/**\n     * Update policy rule adjustment\n     * @param string $uuid internal id\n     * @return array save result + validation output\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"addPolicyRule","method":"POST","parameters":[],"doc":"/**\n     * Add new policy rule adjustment\n     * @return array save result + validation output\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"getPolicyRule","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":"/**\n     * Get properties of a policy rule adjustment\n     * @param null|string $uuid internal id\n     * @return array user defined properties\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"delPolicyRule","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":"/**\n     * Delete policy rule adjustment item\n     * @param string $uuid internal id\n     * @return array save status\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"togglePolicyRule","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null},{"name":"enabled","has_default":true,"default":null}],"doc":"/**\n     * Toggle policy rule adjustment by uuid (enable/disable)\n     * @param $uuid user internal id\n     * @param $enabled desired state enabled(1)/disabled(1), leave empty for toggle\n     * @return array save result\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"checkPolicyRule","method":"GET","parameters":[],"doc":"/**\n     * return the number of custom defined policy rules\n     */"}],"model":"\\OPNsense\\IDS\\IDS","is_abstract":false,"doc":"/**\n * Class SettingsController Handles settings related API actions for the IDS module\n * @package OPNsense\\IDS\n */"},"OPNsense\\IPsec\\Api\\ConnectionsController":{"name":"OPNsense\\IPsec\\Api\\ConnectionsController","namespace":"OPNsense\\IPsec\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"searchConnection","method":"*","parameters":[],"doc":false},{"name":"setConnection","method":"POST","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"addConnection","method":"POST","parameters":[],"doc":false},{"name":"getConnection","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"toggleConnection","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null},{"name":"enabled","has_default":true,"default":null}],"doc":false},{"name":"connectionExists","method":"GET","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"delConnection","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"searchLocal","method":"*","parameters":[],"doc":false},{"name":"getLocal","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"setLocal","method":"POST","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"addLocal","method":"POST","parameters":[],"doc":false},{"name":"toggleLocal","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null},{"name":"enabled","has_default":true,"default":null}],"doc":false},{"name":"delLocal","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"searchRemote","method":"*","parameters":[],"doc":false},{"name":"getRemote","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"setRemote","method":"POST","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"addRemote","method":"POST","parameters":[],"doc":false},{"name":"toggleRemote","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null},{"name":"enabled","has_default":true,"default":null}],"doc":false},{"name":"delRemote","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"searchChild","method":"*","parameters":[],"doc":false},{"name":"getChild","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"setChild","method":"POST","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"addChild","method":"POST","parameters":[],"doc":false},{"name":"toggleChild","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null},{"name":"enabled","has_default":true,"default":null}],"doc":false},{"name":"delChild","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"isEnabled","method":"GET","parameters":[],"doc":"/**\n     * is IPsec enabled\n     */"},{"name":"toggle","method":"POST","parameters":[{"name":"enabled","has_default":true,"default":null}],"doc":"/**\n     * toggle if IPsec is enabled\n     */"},{"name":"swanctl","method":"GET","parameters":[],"doc":"/**\n     * Fetch the contents of swanctl.conf\n     */"}],"model":"OPNsense\\IPsec\\Swanctl","is_abstract":false,"doc":"/**\n * Class ConnectionsController\n * @package OPNsense\\IPsec\\Api\n */"},"OPNsense\\IPsec\\Api\\KeyPairsController":{"name":"OPNsense\\IPsec\\Api\\KeyPairsController","namespace":"OPNsense\\IPsec\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"searchItem","method":"*","parameters":[],"doc":"/**\n     * Search key pairs\n     * @return array\n     * @throws \\ReflectionException\n     */"},{"name":"setItem","method":"POST","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":"/**\n     * Update key pair with given properties\n     * @param $uuid\n     * @return array\n     * @throws \\OPNsense\\Base\\UserException\n     * @throws \\ReflectionException\n     */"},{"name":"addItem","method":"POST","parameters":[],"doc":"/**\n     * Add new key pair with given properties\n     * @return array\n     * @throws \\OPNsense\\Base\\UserException\n     * @throws \\ReflectionException\n     */"},{"name":"getItem","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":"/**\n     * Retrieve key pair or return defaults for new one\n     * @param $uuid\n     * @return array\n     * @throws \\ReflectionException\n     */"},{"name":"delItem","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":"/**\n     * Delete key pair by UUID\n     * @param $uuid\n     * @return array\n     * @throws \\OPNsense\\Base\\UserException\n     * @throws \\ReflectionException\n     */"},{"name":"genKeyPair","method":"GET","parameters":[{"name":"type","has_default":false,"default":null},{"name":"size","has_default":true,"default":null}],"doc":"/**\n     * Generate keypair\n     * @param string $type (rsa, ecdsa)\n     * @param string $size The key size in bytes\n     * @return array\n     */"}],"model":"OPNsense\\IPsec\\IPsec","is_abstract":false,"doc":"/**\n * Class KeyPairsController\n * @package OPNsense\\IPsec\\Api\n */"},"OPNsense\\IPsec\\Api\\LeasesController":{"name":"OPNsense\\IPsec\\Api\\LeasesController","namespace":"OPNsense\\IPsec\\Api","parent":"OPNsense\\Base\\ApiControllerBase","methods":[{"name":"search","method":"GET","parameters":[],"doc":"/**\n     * Search leases\n     * @return array\n     */"},{"name":"pools","method":"GET","parameters":[],"doc":"/**\n     * list pools\n     * @return array\n     */"}],"model":null,"is_abstract":false,"doc":"/**\n * Class LeasesController\n * @package OPNsense\\IPsec\\Api\n */"},"OPNsense\\IPsec\\Api\\LegacySubsystemController":{"name":"OPNsense\\IPsec\\Api\\LegacySubsystemController","namespace":"OPNsense\\IPsec\\Api","parent":"OPNsense\\Base\\ApiControllerBase","methods":[{"name":"status","method":"GET","parameters":[],"doc":"/**\n     * Returns the status of the legacy subsystem, which currently only includes a boolean specifying if the subsystem\n     * is marked as dirty, which means that there are pending changes.\n     * @return array\n     */"},{"name":"applyConfig","method":"POST","parameters":[],"doc":"/**\n     * Apply the IPsec configuration using the legacy subsystem and return a message describing the result\n     * @return array\n     * @throws \\Exception\n     */"}],"model":null,"is_abstract":false,"doc":"/**\n * Class LegacySubsystemController\n * @package OPNsense\\IPsec\\Api\n */"},"OPNsense\\IPsec\\Api\\ManualSPDController":{"name":"OPNsense\\IPsec\\Api\\ManualSPDController","namespace":"OPNsense\\IPsec\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"search","method":"*","parameters":[],"doc":false},{"name":"set","method":"POST","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"add","method":"POST","parameters":[],"doc":false},{"name":"get","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"toggle","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null},{"name":"enabled","has_default":true,"default":null}],"doc":false},{"name":"del","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false}],"model":"OPNsense\\IPsec\\Swanctl","is_abstract":false,"doc":"/**\n * Class ManualSPD\n * @package OPNsense\\IPsec\\Api\n */"},"OPNsense\\IPsec\\Api\\PoolsController":{"name":"OPNsense\\IPsec\\Api\\PoolsController","namespace":"OPNsense\\IPsec\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"search","method":"*","parameters":[],"doc":false},{"name":"set","method":"POST","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"add","method":"POST","parameters":[],"doc":false},{"name":"get","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"toggle","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null},{"name":"enabled","has_default":true,"default":null}],"doc":false},{"name":"del","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false}],"model":"OPNsense\\IPsec\\Swanctl","is_abstract":false,"doc":"/**\n * Class PoolsController\n * @package OPNsense\\IPsec\\Api\n */"},"OPNsense\\IPsec\\Api\\PreSharedKeysController":{"name":"OPNsense\\IPsec\\Api\\PreSharedKeysController","namespace":"OPNsense\\IPsec\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"searchItem","method":"*","parameters":[],"doc":"/**\n     * Search preSharedKeys\n     * @return array\n     * @throws \\ReflectionException\n     */"},{"name":"setItem","method":"POST","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":"/**\n     * Update preSharedKey with given properties\n     * @param $uuid\n     * @return array\n     * @throws \\OPNsense\\Base\\UserException\n     * @throws \\ReflectionException\n     */"},{"name":"addItem","method":"POST","parameters":[],"doc":"/**\n     * Add new preSharedKey with given properties\n     * @return array\n     * @throws \\OPNsense\\Base\\UserException\n     * @throws \\ReflectionException\n     */"},{"name":"getItem","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":"/**\n     * Retrieve key pair or return defaults for new one\n     * @param $uuid\n     * @return array\n     * @throws \\ReflectionException\n     */"},{"name":"delItem","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":"/**\n     * Delete preSharedKey by UUID\n     * @param $uuid\n     * @return array\n     * @throws \\OPNsense\\Base\\UserException\n     * @throws \\ReflectionException\n     */"}],"model":"OPNsense\\IPsec\\IPsec","is_abstract":false,"doc":"/**\n * Class PreSharedKeysController\n * @package OPNsense\\IPsec\\Api\n */"},"OPNsense\\IPsec\\Api\\SadController":{"name":"OPNsense\\IPsec\\Api\\SadController","namespace":"OPNsense\\IPsec\\Api","parent":"OPNsense\\Base\\ApiControllerBase","methods":[{"name":"search","method":"GET","parameters":[],"doc":"/**\n     * Search SAD entries\n     * @return array\n     */"},{"name":"delete","method":"POST","parameters":[{"name":"id","has_default":false,"default":null}],"doc":"/**\n     * Remove an SPD entry\n     * @param string $id md 5 hash to identify the spd entry\n     * @return array\n     */"}],"model":null,"is_abstract":false,"doc":"/**\n * Class SadController\n * @package OPNsense\\IPsec\\Api\n */"},"OPNsense\\IPsec\\Api\\ServiceController":{"name":"OPNsense\\IPsec\\Api\\ServiceController","namespace":"OPNsense\\IPsec\\Api","parent":"OPNsense\\Base\\ApiMutableServiceControllerBase","methods":[{"name":"start","method":"POST","parameters":[],"doc":"/**\n     * start service\n     * @return array\n     * @throws \\Exception when configd action fails\n     */"},{"name":"stop","method":"POST","parameters":[],"doc":"/**\n     * stop service\n     * @return array\n     * @throws \\Exception when configd actions fails\n     */"},{"name":"restart","method":"POST","parameters":[],"doc":"/**\n     * restart service\n     * @return array\n     * @throws \\Exception\n     */"},{"name":"reconfigure","method":"POST","parameters":[],"doc":"/**\n     * reconfigure with optional stop, generate config and start / reload\n     * @return array response message\n     * @throws \\Exception when configd action fails\n     * @throws \\ReflectionException when model can't be instantiated\n     */"},{"name":"status","method":"GET","parameters":[],"doc":"/**\n     * retrieve status of service\n     * @return array response message\n     * @throws \\Exception when configd action fails\n     */"}],"model":null,"is_abstract":false,"doc":"/**\n * {@inheritdoc}\n */"},"OPNsense\\IPsec\\Api\\SessionsController":{"name":"OPNsense\\IPsec\\Api\\SessionsController","namespace":"OPNsense\\IPsec\\Api","parent":"OPNsense\\Base\\ApiControllerBase","methods":[{"name":"searchPhase1","method":"GET","parameters":[],"doc":"/**\n     * Search phase 1 session entries\n     * @return array\n     */"},{"name":"searchPhase2","method":"POST","parameters":[],"doc":"/**\n     * Search phase 2 session entries\n     * @return array\n     */"},{"name":"connect","method":"POST","parameters":[{"name":"id","has_default":false,"default":null}],"doc":"/**\n     * connect a session\n     * @param string $id md 5 hash to identify the spd entry\n     * @return array\n     */"},{"name":"disconnect","method":"POST","parameters":[{"name":"id","has_default":false,"default":null}],"doc":"/**\n     * disconnect a session\n     * @param string $id md 5 hash to identify the spd entry\n     * @return array\n     */"}],"model":null,"is_abstract":false,"doc":"/**\n * Class SessionsController\n * @package OPNsense\\IPsec\\Api\n */"},"OPNsense\\IPsec\\Api\\SettingsController":{"name":"OPNsense\\IPsec\\Api\\SettingsController","namespace":"OPNsense\\IPsec\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * @inheritdoc\n     */"}],"model":"OPNsense\\IPsec\\IPsec","is_abstract":false,"doc":"/**\n * Class SetttingsController\n * @package OPNsense\\IPsec\\Api\n */"},"OPNsense\\IPsec\\Api\\SpdController":{"name":"OPNsense\\IPsec\\Api\\SpdController","namespace":"OPNsense\\IPsec\\Api","parent":"OPNsense\\Base\\ApiControllerBase","methods":[{"name":"search","method":"GET","parameters":[],"doc":"/**\n     * Search SPD entries\n     * @return array\n     */"},{"name":"delete","method":"POST","parameters":[{"name":"id","has_default":false,"default":null}],"doc":"/**\n     * Remove an SPD entry\n     * @param string $id md 5 hash to identify the spd entry\n     * @return array\n     */"}],"model":null,"is_abstract":false,"doc":"/**\n * Class SpdController\n * @package OPNsense\\IPsec\\Api\n */"},"OPNsense\\IPsec\\Api\\TunnelController":{"name":"OPNsense\\IPsec\\Api\\TunnelController","namespace":"OPNsense\\IPsec\\Api","parent":"OPNsense\\Base\\ApiControllerBase","methods":[{"name":"searchPhase1","method":"GET","parameters":[],"doc":false},{"name":"searchPhase2","method":"POST","parameters":[],"doc":false},{"name":"delPhase1","method":"POST","parameters":[{"name":"ikeid","has_default":false,"default":null}],"doc":"/**\n     * delete phase 1 including associated phase 2 entries\n     */"},{"name":"togglePhase1","method":"POST","parameters":[{"name":"ikeid","has_default":false,"default":null},{"name":"enabled","has_default":true,"default":null}],"doc":"/**\n     * toggle if phase 1 is enabled\n     */"},{"name":"delPhase2","method":"POST","parameters":[{"name":"seqid","has_default":false,"default":null}],"doc":"/**\n     * delete phase 2 entry\n     */"},{"name":"togglePhase2","method":"POST","parameters":[{"name":"seqid","has_default":false,"default":null},{"name":"enabled","has_default":true,"default":null}],"doc":"/**\n     * toggle if phase 2 is enabled\n     */"},{"name":"toggle","method":"POST","parameters":[{"name":"enabled","has_default":true,"default":null}],"doc":"/**\n     * toggle if IPsec is enabled\n     */"}],"model":null,"is_abstract":false,"doc":"/**\n * Class TunnelController\n * @package OPNsense\\IPsec\\Api\n */"},"OPNsense\\IPsec\\Api\\VtiController":{"name":"OPNsense\\IPsec\\Api\\VtiController","namespace":"OPNsense\\IPsec\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"search","method":"*","parameters":[],"doc":false},{"name":"set","method":"POST","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"add","method":"POST","parameters":[],"doc":false},{"name":"get","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"toggle","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null},{"name":"enabled","has_default":true,"default":null}],"doc":false},{"name":"del","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false}],"model":"OPNsense\\IPsec\\Swanctl","is_abstract":false,"doc":"/**\n * Class VtiController\n * @package OPNsense\\IPsec\\Api\n */"},"OPNsense\\Interfaces\\Api\\GifSettingsController":{"name":"OPNsense\\Interfaces\\Api\\GifSettingsController","namespace":"OPNsense\\Interfaces\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"searchItem","method":"*","parameters":[],"doc":"/**\n     * search gifs\n     * @return array search results\n     */"},{"name":"setItem","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":"/**\n     * Update gif with given properties\n     * @param string $uuid internal id\n     * @return array save result + validation output\n     */"},{"name":"addItem","method":"POST","parameters":[],"doc":"/**\n     * Add new gif and set with attributes from post\n     * @return array save result + validation output\n     */"},{"name":"getItem","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":"/**\n     * Retrieve gif settings or return defaults for new one\n     * @param $uuid item unique id\n     * @return array gif content\n     */"},{"name":"delItem","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":"/**\n     * Delete gif by uuid\n     * @param string $uuid internal id\n     * @return array save status\n     */"},{"name":"getIfOptions","method":"GET","parameters":[],"doc":false},{"name":"reconfigure","method":"POST","parameters":[],"doc":"/**\n     * reconfigure gifs\n     */"}],"model":"OPNsense\\Interfaces\\Gif","is_abstract":false,"doc":"/**\n * @package OPNsense\\Interfaces\n */"},"OPNsense\\Interfaces\\Api\\GreSettingsController":{"name":"OPNsense\\Interfaces\\Api\\GreSettingsController","namespace":"OPNsense\\Interfaces\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"searchItem","method":"*","parameters":[],"doc":"/**\n     * search gres\n     * @return array search results\n     */"},{"name":"setItem","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":"/**\n     * Update gre with given properties\n     * @param string $uuid internal id\n     * @return array save result + validation output\n     */"},{"name":"addItem","method":"POST","parameters":[],"doc":"/**\n     * Add new gre and set with attributes from post\n     * @return array save result + validation output\n     */"},{"name":"getItem","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":"/**\n     * Retrieve gre settings or return defaults for new one\n     * @param $uuid item unique id\n     * @return array gre content\n     */"},{"name":"delItem","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":"/**\n     * Delete gre by uuid\n     * @param string $uuid internal id\n     * @return array save status\n     */"},{"name":"getIfOptions","method":"GET","parameters":[],"doc":false},{"name":"reconfigure","method":"POST","parameters":[],"doc":"/**\n     * reconfigure gres\n     */"}],"model":"OPNsense\\Interfaces\\Gre","is_abstract":false,"doc":"/**\n * @package OPNsense\\Interfaces\n */"},"OPNsense\\Interfaces\\Api\\LaggSettingsController":{"name":"OPNsense\\Interfaces\\Api\\LaggSettingsController","namespace":"OPNsense\\Interfaces\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"searchItem","method":"*","parameters":[],"doc":"/**\n     * search laggs\n     * @return array search results\n     */"},{"name":"setItem","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":"/**\n     * Update lagg with given properties\n     * @param string $uuid internal id\n     * @return array save result + validation output\n     */"},{"name":"addItem","method":"POST","parameters":[],"doc":"/**\n     * Add new lagg and set with attributes from post\n     * @return array save result + validation output\n     */"},{"name":"getItem","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":"/**\n     * Retrieve lagg settings or return defaults for new one\n     * @param $uuid item unique id\n     * @return array lagg content\n     */"},{"name":"delItem","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":"/**\n     * Delete lagg by uuid\n     * @param string $uuid internal id\n     * @return array save status\n     */"},{"name":"reconfigure","method":"POST","parameters":[],"doc":"/**\n     * reconfigure laggs\n     */"}],"model":"OPNsense\\Interfaces\\Lagg","is_abstract":false,"doc":"/**\n * @package OPNsense\\Interfaces\n */"},"OPNsense\\Interfaces\\Api\\LoopbackSettingsController":{"name":"OPNsense\\Interfaces\\Api\\LoopbackSettingsController","namespace":"OPNsense\\Interfaces\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"searchItem","method":"*","parameters":[],"doc":false},{"name":"setItem","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"addItem","method":"POST","parameters":[],"doc":false},{"name":"getItem","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"delItem","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"reconfigure","method":"POST","parameters":[],"doc":false}],"model":"OPNsense\\Interfaces\\Loopback","is_abstract":false,"doc":false},"OPNsense\\Interfaces\\Api\\NeighborSettingsController":{"name":"OPNsense\\Interfaces\\Api\\NeighborSettingsController","namespace":"OPNsense\\Interfaces\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"searchItem","method":"*","parameters":[],"doc":false},{"name":"setItem","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"addItem","method":"POST","parameters":[],"doc":false},{"name":"getItem","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"delItem","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"reconfigure","method":"POST","parameters":[],"doc":false}],"model":"OPNsense\\Interfaces\\Neighbor","is_abstract":false,"doc":false},"OPNsense\\Interfaces\\Api\\OverviewController":{"name":"OPNsense\\Interfaces\\Api\\OverviewController","namespace":"OPNsense\\Interfaces\\Api","parent":"OPNsense\\Base\\ApiControllerBase","methods":[{"name":"interfacesInfo","method":"GET","parameters":[{"name":"details","has_default":true,"default":false}],"doc":false},{"name":"getInterface","method":"GET","parameters":[{"name":"if","has_default":true,"default":null}],"doc":false},{"name":"reloadInterface","method":"GET","parameters":[{"name":"identifier","has_default":true,"default":null}],"doc":false},{"name":"export","method":"GET","parameters":[],"doc":false}],"model":null,"is_abstract":false,"doc":false},"OPNsense\\Interfaces\\Api\\VipSettingsController":{"name":"OPNsense\\Interfaces\\Api\\VipSettingsController","namespace":"OPNsense\\Interfaces\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"getUnusedVhid","method":"GET","parameters":[],"doc":"/**\n     * retrieve first unused VHID number\n     */"},{"name":"searchItem","method":"*","parameters":[],"doc":false},{"name":"setItem","method":"GET","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"addItem","method":"GET","parameters":[],"doc":false},{"name":"getItem","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"delItem","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"reconfigure","method":"POST","parameters":[],"doc":false}],"model":"OPNsense\\Interfaces\\Vip","is_abstract":false,"doc":false},"OPNsense\\Interfaces\\Api\\VlanSettingsController":{"name":"OPNsense\\Interfaces\\Api\\VlanSettingsController","namespace":"OPNsense\\Interfaces\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"searchItem","method":"*","parameters":[],"doc":false},{"name":"setItem","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"addItem","method":"GET","parameters":[],"doc":false},{"name":"getItem","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"delItem","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"reconfigure","method":"POST","parameters":[],"doc":false}],"model":"OPNsense\\Interfaces\\Vlan","is_abstract":false,"doc":false},"OPNsense\\Interfaces\\Api\\VxlanSettingsController":{"name":"OPNsense\\Interfaces\\Api\\VxlanSettingsController","namespace":"OPNsense\\Interfaces\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"searchItem","method":"*","parameters":[],"doc":false},{"name":"setItem","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"addItem","method":"POST","parameters":[],"doc":false},{"name":"getItem","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"delItem","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"reconfigure","method":"POST","parameters":[],"doc":false}],"model":"OPNsense\\Interfaces\\VxLan","is_abstract":false,"doc":false},"OPNsense\\Kea\\Api\\CtrlAgentController":{"name":"OPNsense\\Kea\\Api\\CtrlAgentController","namespace":"OPNsense\\Kea\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * @inheritdoc\n     */"}],"model":"OPNsense\\Kea\\KeaCtrlAgent","is_abstract":false,"doc":false},"OPNsense\\Kea\\Api\\Dhcpv4Controller":{"name":"OPNsense\\Kea\\Api\\Dhcpv4Controller","namespace":"OPNsense\\Kea\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * @inheritdoc\n     */"},{"name":"searchSubnet","method":"*","parameters":[],"doc":false},{"name":"setSubnet","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"addSubnet","method":"POST","parameters":[],"doc":false},{"name":"getSubnet","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"delSubnet","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"searchReservation","method":"*","parameters":[],"doc":false},{"name":"setReservation","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"addReservation","method":"POST","parameters":[],"doc":false},{"name":"getReservation","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"delReservation","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"downloadReservations","method":"GET","parameters":[],"doc":false},{"name":"uploadReservations","method":"POST","parameters":[],"doc":false},{"name":"searchPeer","method":"*","parameters":[],"doc":false},{"name":"setPeer","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"addPeer","method":"POST","parameters":[],"doc":false},{"name":"getPeer","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"delPeer","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false}],"model":"OPNsense\\Kea\\KeaDhcpv4","is_abstract":false,"doc":false},"OPNsense\\Kea\\Api\\Leases4Controller":{"name":"OPNsense\\Kea\\Api\\Leases4Controller","namespace":"OPNsense\\Kea\\Api","parent":"OPNsense\\Base\\ApiControllerBase","methods":[{"name":"search","method":"GET","parameters":[],"doc":false}],"model":null,"is_abstract":false,"doc":false},"OPNsense\\Kea\\Api\\ServiceController":{"name":"OPNsense\\Kea\\Api\\ServiceController","namespace":"OPNsense\\Kea\\Api","parent":"OPNsense\\Base\\ApiMutableServiceControllerBase","methods":[{"name":"start","method":"POST","parameters":[],"doc":"/**\n     * start service\n     * @return array\n     * @throws \\Exception when configd action fails\n     */"},{"name":"stop","method":"POST","parameters":[],"doc":"/**\n     * stop service\n     * @return array\n     * @throws \\Exception when configd actions fails\n     */"},{"name":"restart","method":"POST","parameters":[],"doc":"/**\n     * restart service\n     * @return array\n     * @throws \\Exception\n     */"},{"name":"reconfigure","method":"POST","parameters":[],"doc":"/**\n     * reconfigure with optional stop, generate config and start / reload\n     * @return array response message\n     * @throws \\Exception when configd action fails\n     * @throws \\ReflectionException when model can't be instantiated\n     */"},{"name":"status","method":"GET","parameters":[],"doc":"/**\n     * retrieve status of service\n     * @return array response message\n     * @throws \\Exception when configd action fails\n     */"}],"model":null,"is_abstract":false,"doc":false},"OPNsense\\Monit\\Api\\ServiceController":{"name":"OPNsense\\Monit\\Api\\ServiceController","namespace":"OPNsense\\Monit\\Api","parent":"OPNsense\\Base\\ApiMutableServiceControllerBase","methods":[{"name":"start","method":"POST","parameters":[],"doc":"/**\n     * start service\n     * @return array\n     * @throws \\Exception when configd action fails\n     */"},{"name":"stop","method":"POST","parameters":[],"doc":"/**\n     * stop service\n     * @return array\n     * @throws \\Exception when configd actions fails\n     */"},{"name":"restart","method":"POST","parameters":[],"doc":"/**\n     * restart service\n     * @return array\n     * @throws \\Exception\n     */"},{"name":"reconfigure","method":"POST","parameters":[],"doc":"/**\n     * reconfigure with optional stop, generate config and start / reload\n     * @return array response message\n     * @throws \\Exception when configd action fails\n     * @throws \\ReflectionException when model can't be instantiated\n     */"},{"name":"status","method":"GET","parameters":[],"doc":"/**\n     * retrieve status of service\n     * @return array response message\n     * @throws \\Exception when configd action fails\n     */"},{"name":"check","method":"POST","parameters":[],"doc":"/**\n     * test monit configuration\n     * @return array\n     */"},{"name":"reconfigure","method":"POST","parameters":[],"doc":"/**\n     * reconfigure monit\n     * @return array\n     */"}],"model":null,"is_abstract":false,"doc":"/**\n * Class ServiceController\n * @package OPNsense\\Monit\n */"},"OPNsense\\Monit\\Api\\SettingsController":{"name":"OPNsense\\Monit\\Api\\SettingsController","namespace":"OPNsense\\Monit\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"dirty","method":"GET","parameters":[],"doc":"/**\n     * check if changes to the monit settings were made\n     * @return array result\n     */"},{"name":"getAlert","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":"/**\n     * Retrieve alert settings or return defaults\n     * @param $uuid item unique id\n     * @return array monit alert content\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"setAlert","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":"/**\n     * Update alert with given properties\n     * @param string $uuid internal id\n     * @return array save result + validation output\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"addAlert","method":"POST","parameters":[],"doc":"/**\n     * Add alert with given properties\n     * @return array save result + validation output\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"delAlert","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":"/**\n     * Delete alert by uuid\n     * @param string $uuid internal id\n     * @return array save status\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"searchAlert","method":"*","parameters":[],"doc":"/**\n     * Search monit alerts\n     * @return array list of found alerts\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"toggleAlert","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null},{"name":"enabled","has_default":true,"default":null}],"doc":"/**\n     * Toggle alert defined by uuid (enable/disable)\n     * @param $uuid alert internal id\n     * @param $enabled desired state enabled(1)/disabled(1), leave empty for toggle\n     * @return array save result\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"getService","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":"/**\n     * Retrieve service settings or return defaults\n     * @param $uuid item unique id\n     * @return array monit service content\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"setService","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":"/**\n     * Update service with given properties\n     * @param string $uuid internal id\n     * @return array save result + validation output\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"addService","method":"POST","parameters":[],"doc":"/**\n     * Add service with given properties\n     * @return array save result + validation output\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"delService","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":"/**\n     * Delete service by uuid\n     * @param string $uuid internal id\n     * @return array save status\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"searchService","method":"GET","parameters":[],"doc":"/**\n     * Search monit services\n     * @return array list of found services\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"toggleService","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null},{"name":"enabled","has_default":true,"default":null}],"doc":"/**\n     * Toggle service defined by uuid (enable/disable)\n     * @param $uuid service internal id\n     * @param $enabled desired state enabled(1)/disabled(1), leave empty for toggle\n     * @return array save result\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"getTest","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":"/**\n     * Retrieve test settings or return defaults\n     * @param $uuid item unique id\n     * @return array monit test content\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"setTest","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":"/**\n     * Update test with given properties\n     * @param string $uuid internal id\n     * @return array save result + validation output\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"addTest","method":"POST","parameters":[],"doc":"/**\n     * Add test with given properties\n     * @return array save result + validation output\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"delTest","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":"/**\n     * Delete test by uuid\n     * @param string $uuid internal id\n     * @return array save status\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"searchTest","method":"GET","parameters":[],"doc":"/**\n     * Search monit services\n     * @return array list of found services\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"getGeneral","method":"GET","parameters":[],"doc":"/**\n     * Retrieve general settings\n     * @return array monit general settings content\n     * @throws \\ReflectionException when not bound to model\n     */"}],"model":"OPNsense\\Monit\\Monit","is_abstract":false,"doc":"/**\n * Class SettingsController\n * @package OPNsense\\Monit\n */"},"OPNsense\\Monit\\Api\\StatusController":{"name":"OPNsense\\Monit\\Api\\StatusController","namespace":"OPNsense\\Monit\\Api","parent":"OPNsense\\Base\\ApiControllerBase","methods":[{"name":"get","method":"GET","parameters":[{"name":"format","has_default":true,"default":"xml"}],"doc":"/**\n     * get monit status page\n     * see monit(1)\n     * @return array\n     */"}],"model":null,"is_abstract":false,"doc":"/**\n * Class StatusController\n * @package OPNsense\\Monit\n */"},"OPNsense\\OpenVPN\\Api\\ClientOverwritesController":{"name":"OPNsense\\OpenVPN\\Api\\ClientOverwritesController","namespace":"OPNsense\\OpenVPN\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"search","method":"*","parameters":[],"doc":false},{"name":"get","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"add","method":"POST","parameters":[],"doc":false},{"name":"set","method":"POST","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"del","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"toggle","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null},{"name":"enabled","has_default":true,"default":null}],"doc":false}],"model":"OPNsense\\OpenVPN\\OpenVPN","is_abstract":false,"doc":"/**\n * Class ClientOverwritesController\n * @package OPNsense\\OpenVPN\\Api\n */"},"OPNsense\\OpenVPN\\Api\\ExportController":{"name":"OPNsense\\OpenVPN\\Api\\ExportController","namespace":"OPNsense\\OpenVPN\\Api","parent":"OPNsense\\Base\\ApiControllerBase","methods":[{"name":"providers","method":"GET","parameters":[],"doc":"/**\n     * list providers\n     * @return array list of configured openvpn providers (servers)\n     * @throws \\Exception when unable to contact configd\n     */"},{"name":"accounts","method":"GET","parameters":[{"name":"vpnid","has_default":true,"default":null}],"doc":"/**\n     * list configured accounts\n     * @param string $vpnid server handle\n     * @return array list of configured accounts\n     */"},{"name":"templates","method":"GET","parameters":[],"doc":"/**\n     * list configured export options (client types)\n     * @return array list of templates\n     */"},{"name":"validatePresets","method":"POST","parameters":[{"name":"vpnid","has_default":false,"default":null}],"doc":"/**\n     * validate user/model input for configurable options\n     * @param $vpnid server handle\n     * @return array status and validation output\n     * @throws \\OPNsense\\Base\\ModelException\n     */"},{"name":"storePresets","method":"POST","parameters":[{"name":"vpnid","has_default":false,"default":null}],"doc":"/**\n     * store presets when valid and changed\n     * @param $vpnid server handle\n     * @return array status and validation output\n     * @throws \\OPNsense\\Base\\ModelException\n     */"},{"name":"download","method":"POST","parameters":[{"name":"vpnid","has_default":false,"default":null},{"name":"certref","has_default":true,"default":null}],"doc":"/**\n     * download configuration\n     * @param string $vpnid server handle\n     * @param string $certref certificate to export if applicable\n     * @return array\n     * @throws \\OPNsense\\Base\\ModelException\n     * @throws UserException when invalid user input\n     */"}],"model":null,"is_abstract":false,"doc":"/**\n * Class ExportController handles client export functions\n * @package OPNsense\\OpenVPN\n */"},"OPNsense\\OpenVPN\\Api\\InstancesController":{"name":"OPNsense\\OpenVPN\\Api\\InstancesController","namespace":"OPNsense\\OpenVPN\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"search","method":"*","parameters":[],"doc":false},{"name":"get","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"add","method":"POST","parameters":[],"doc":false},{"name":"set","method":"POST","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"del","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"toggle","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null},{"name":"enabled","has_default":true,"default":null}],"doc":false},{"name":"searchStaticKey","method":"*","parameters":[],"doc":"/**\n     * static key administration\n     */"},{"name":"getStaticKey","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"addStaticKey","method":"POST","parameters":[],"doc":false},{"name":"setStaticKey","method":"POST","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"delStaticKey","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"genKey","method":"GET","parameters":[{"name":"type","has_default":true,"default":"secret"}],"doc":false}],"model":"OPNsense\\OpenVPN\\OpenVPN","is_abstract":false,"doc":"/**\n * Class InstancesController\n * @package OPNsense\\OpenVPN\\Api\n */"},"OPNsense\\OpenVPN\\Api\\ServiceController":{"name":"OPNsense\\OpenVPN\\Api\\ServiceController","namespace":"OPNsense\\OpenVPN\\Api","parent":"OPNsense\\Base\\ApiControllerBase","methods":[{"name":"searchSessions","method":"GET","parameters":[],"doc":"/**\n     * Search sessions\n     * @return array\n     */"},{"name":"searchRoutes","method":"GET","parameters":[],"doc":"/**\n     * Search routes\n     * @return array\n     */"},{"name":"killSession","method":"POST","parameters":[],"doc":"/**\n     * kill session by source ip:port or common name\n     * @return array\n     */"},{"name":"startService","method":"POST","parameters":[{"name":"id","has_default":true,"default":null}],"doc":"/**\n     * @param int $id server/client id to start\n     * @return array\n     */"},{"name":"stopService","method":"POST","parameters":[{"name":"id","has_default":true,"default":null}],"doc":"/**\n     * @param int $id server/client id to stop\n     * @return array\n     */"},{"name":"restartService","method":"POST","parameters":[{"name":"id","has_default":true,"default":null}],"doc":"/**\n     * @param int $id server/client id to restart\n     * @return array\n     */"},{"name":"reconfigure","method":"POST","parameters":[],"doc":"/**\n     * @return array\n     */"}],"model":null,"is_abstract":false,"doc":"/**\n * Class ServiceController\n * @package OPNsense\\OpenVPN\n */"},"OPNsense\\Routes\\Api\\GatewayController":{"name":"OPNsense\\Routes\\Api\\GatewayController","namespace":"OPNsense\\Routes\\Api","parent":"OPNsense\\Base\\ApiControllerBase","methods":[{"name":"status","method":"GET","parameters":[],"doc":false}],"model":null,"is_abstract":false,"doc":"/**\n * @package OPNsense\\Routes\n */"},"OPNsense\\Routes\\Api\\RoutesController":{"name":"OPNsense\\Routes\\Api\\RoutesController","namespace":"OPNsense\\Routes\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"searchroute","method":"*","parameters":[],"doc":"/**\n     * search routes\n     * @return array search results\n     * @throws \\ReflectionException\n     */"},{"name":"setroute","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":"/**\n     * Update route with given properties\n     * @param string $uuid internal id\n     * @return array save result + validation output\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"addroute","method":"POST","parameters":[],"doc":"/**\n     * Add new route and set with attributes from post\n     * @return array save result + validation output\n     * @throws \\OPNsense\\Base\\ModelException when not bound to model\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException\n     */"},{"name":"getroute","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":"/**\n     * Retrieve route settings or return defaults for new one\n     * @param $uuid item unique id\n     * @return array route content\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"delroute","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":"/**\n     * Delete route by uuid, save contents to tmp for removal on apply\n     * @param string $uuid internal id\n     * @return array save status\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     * @throws \\OPNsense\\Base\\ModelException when not bound to model\n     */"},{"name":"toggleroute","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null},{"name":"disabled","has_default":true,"default":null}],"doc":"/**\n     * toggle, we can not use our default action here since enabled/disabled are swapped\n     * @param string $uuid id to toggled\n     * @param string|null $disabled set disabled by default\n     * @return array status\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     * @throws \\OPNsense\\Base\\ModelException when not bound to model\n     */"},{"name":"reconfigure","method":"POST","parameters":[],"doc":"/**\n     * reconfigure routes\n     * @return array reconfigure status\n     * @throws \\Exception when unable to execute configd command\n     */"}],"model":"\\OPNsense\\Routes\\Route","is_abstract":false,"doc":"/**\n * @package OPNsense\\Routes\n */"},"OPNsense\\Routing\\Api\\SettingsController":{"name":"OPNsense\\Routing\\Api\\SettingsController","namespace":"OPNsense\\Routing\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"reconfigure","method":"POST","parameters":[],"doc":false},{"name":"searchGateway","method":"GET","parameters":[],"doc":false},{"name":"getGateway","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"setGateway","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"addGateway","method":"POST","parameters":[],"doc":false},{"name":"delGateway","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"toggleGateway","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null},{"name":"enabled","has_default":true,"default":null}],"doc":false}],"model":"\\OPNsense\\Routing\\Gateways","is_abstract":false,"doc":false},"OPNsense\\Syslog\\Api\\ServiceController":{"name":"OPNsense\\Syslog\\Api\\ServiceController","namespace":"OPNsense\\Syslog\\Api","parent":"OPNsense\\Base\\ApiMutableServiceControllerBase","methods":[{"name":"start","method":"POST","parameters":[],"doc":"/**\n     * start service\n     * @return array\n     * @throws \\Exception when configd action fails\n     */"},{"name":"stop","method":"POST","parameters":[],"doc":"/**\n     * stop service\n     * @return array\n     * @throws \\Exception when configd actions fails\n     */"},{"name":"restart","method":"POST","parameters":[],"doc":"/**\n     * restart service\n     * @return array\n     * @throws \\Exception\n     */"},{"name":"reconfigure","method":"POST","parameters":[],"doc":"/**\n     * reconfigure with optional stop, generate config and start / reload\n     * @return array response message\n     * @throws \\Exception when configd action fails\n     * @throws \\ReflectionException when model can't be instantiated\n     */"},{"name":"status","method":"GET","parameters":[],"doc":"/**\n     * retrieve status of service\n     * @return array response message\n     * @throws \\Exception when configd action fails\n     */"},{"name":"reset","method":"POST","parameters":[],"doc":"/**\n     * reset local logging\n     * @return status array\n     */"},{"name":"stats","method":"POST","parameters":[],"doc":"/**\n     * fetch syslog-ng statistics\n     * @return array of stat records\n     */"}],"model":null,"is_abstract":false,"doc":"/**\n * {@inheritdoc}\n */"},"OPNsense\\Syslog\\Api\\SettingsController":{"name":"OPNsense\\Syslog\\Api\\SettingsController","namespace":"OPNsense\\Syslog\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"searchDestinations","method":"*","parameters":[],"doc":"/**\n     * Search syslog destinations\n     * @return array list of found rules\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"getDestination","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":"/**\n     * Retrieve destination settings or return defaults for a new one\n     * @param $uuid item unique id\n     * @return array destination content\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"setDestination","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":"/**\n     * Update destination with given properties\n     * @param string $uuid internal id\n     * @return array save result + validation output\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"addDestination","method":"POST","parameters":[],"doc":"/**\n     * Add new destination and set with attributes from post\n     * @return array save result + validation output\n     * @throws \\OPNsense\\Base\\ModelException when not bound to model\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     */"},{"name":"delDestination","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":"/**\n     * Delete destination by uuid\n     * @param string $uuid internal id\n     * @return array save status\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"toggleDestination","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null},{"name":"enabled","has_default":true,"default":null}],"doc":"/**\n     * Toggle destination defined by uuid (enable/disable)\n     * @param $uuid user defined rule internal id\n     * @param $enabled desired state enabled(1)/disabled(1), leave empty for toggle\n     * @return array save result\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     */"}],"model":"\\OPNsense\\Syslog\\Syslog","is_abstract":false,"doc":"/**\n * Class SettingsController Handles settings related API actions for the Syslog module\n * @package OPNsense\\IDS\n */"},"OPNsense\\TrafficShaper\\Api\\ServiceController":{"name":"OPNsense\\TrafficShaper\\Api\\ServiceController","namespace":"OPNsense\\TrafficShaper\\Api","parent":"OPNsense\\Base\\ApiControllerBase","methods":[{"name":"reconfigure","method":"POST","parameters":[],"doc":"/**\n     * reconfigure shaper/ipfw, generate config and reload\n     */"},{"name":"flushreload","method":"POST","parameters":[],"doc":"/**\n     * flush all ipfw rules\n     */"},{"name":"statistics","method":"GET","parameters":[],"doc":"/**\n     * fetch current statistics\n     */"}],"model":null,"is_abstract":false,"doc":"/**\n * Class ServiceController\n * @package OPNsense\\TrafficShaper\n */"},"OPNsense\\TrafficShaper\\Api\\SettingsController":{"name":"OPNsense\\TrafficShaper\\Api\\SettingsController","namespace":"OPNsense\\TrafficShaper\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"getPipe","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":"/**\n     * Retrieve pipe settings or return defaults\n     * @param $uuid item unique id\n     * @return array traffic shaper pipe content\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"setPipe","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":"/**\n     * Update  pipe with given properties\n     * @param string $uuid internal id\n     * @return array save result + validation output\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"addPipe","method":"POST","parameters":[],"doc":"/**\n     * Add new pipe and set with attributes from post\n     * @return array save result + validation output\n     * @throws \\OPNsense\\Base\\ModelException when not bound to model\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     */"},{"name":"delPipe","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":"/**\n     * Delete pipe by uuid\n     * @param string $uuid internal id\n     * @return array save status\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"togglePipe","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null},{"name":"enabled","has_default":true,"default":null}],"doc":"/**\n     * Toggle pipe defined by uuid (enable/disable)\n     * @param $uuid user defined rule internal id\n     * @param $enabled desired state enabled(1)/disabled(1), leave empty for toggle\n     * @return array save result\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"searchPipes","method":"*","parameters":[],"doc":"/**\n     * Search traffic shaper pipes\n     * @return array list of found pipes\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"searchQueues","method":"*","parameters":[],"doc":"/**\n     * Search traffic shaper queues\n     * @return array list of found queues\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"getQueue","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":"/**\n     * Retrieve queue settings or return defaults\n     * @param $uuid item unique id\n     * @return array traffic shaper queue content\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"setQueue","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":"/**\n     * Update queue with given properties\n     * @param string $uuid internal id\n     * @return array save result + validation output\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"addQueue","method":"POST","parameters":[],"doc":"/**\n     * Add new queue and set with attributes from post\n     * @return array save result + validation output\n     * @throws \\OPNsense\\Base\\ModelException when not bound to model\n     */"},{"name":"delQueue","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":"/**\n     * Delete queue by uuid\n     * @param string $uuid internal id\n     * @return array save status\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"toggleQueue","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null},{"name":"enabled","has_default":true,"default":null}],"doc":"/**\n     * Toggle queue defined by uuid (enable/disable)\n     * @param $uuid user defined rule internal id\n     * @param $enabled desired state enabled(1)/disabled(1), leave empty for toggle\n     * @return array save result\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"searchRules","method":"*","parameters":[],"doc":"/**\n     * Search traffic shaper rules\n     * @return array list of found rules\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"getRule","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":"/**\n     * Retrieve rule settings or return defaults for new rule\n     * @param $uuid item unique id\n     * @return array traffic shaper rule content\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"setRule","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":"/**\n     * Update rule with given properties\n     * @param string $uuid internal id\n     * @return array save result + validation output\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"addRule","method":"POST","parameters":[],"doc":"/**\n     * Add new rule and set with attributes from post\n     * @return array save result + validation output\n     * @throws \\OPNsense\\Base\\ModelException when not bound to model\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     */"},{"name":"delRule","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":"/**\n     * Delete rule by uuid\n     * @param string $uuid internal id\n     * @return array save status\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     */"},{"name":"toggleRule","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null},{"name":"enabled","has_default":true,"default":null}],"doc":"/**\n     * Toggle rule defined by uuid (enable/disable)\n     * @param $uuid user defined rule internal id\n     * @param $enabled desired state enabled(1)/disabled(1), leave empty for toggle\n     * @return array save result\n     * @throws \\OPNsense\\Base\\ValidationException when field validations fail\n     * @throws \\ReflectionException when not bound to model\n     */"}],"model":"\\OPNsense\\TrafficShaper\\TrafficShaper","is_abstract":false,"doc":"/**\n * Class SettingsController Handles settings related API actions for the Traffic Shaper\n * @package OPNsense\\TrafficShaper\n */"},"OPNsense\\Trust\\Api\\CaController":{"name":"OPNsense\\Trust\\Api\\CaController","namespace":"OPNsense\\Trust\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"search","method":"*","parameters":[],"doc":false},{"name":"get","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"add","method":"POST","parameters":[],"doc":false},{"name":"set","method":"POST","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"del","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"caInfo","method":"GET","parameters":[{"name":"caref","has_default":false,"default":null}],"doc":false},{"name":"rawDump","method":"GET","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"caList","method":"GET","parameters":[],"doc":false},{"name":"generateFile","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null},{"name":"type","has_default":true,"default":"crt"}],"doc":"/**\n     * generate file download content\n     * @param string $uuid certificate reference\n     * @param string $type one of crt/prv/pkcs12,\n     *                  $_POST['password'] my contain an optional password for the pkcs12 format\n     * @return array\n     */"}],"model":"OPNsense\\Trust\\Ca","is_abstract":false,"doc":"/**\n * Class CaController\n * @package OPNsense\\Trust\\Api\n */"},"OPNsense\\Trust\\Api\\CertController":{"name":"OPNsense\\Trust\\Api\\CertController","namespace":"OPNsense\\Trust\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"search","method":"*","parameters":[],"doc":false},{"name":"get","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"add","method":"POST","parameters":[],"doc":false},{"name":"set","method":"POST","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"del","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"caInfo","method":"GET","parameters":[{"name":"caref","has_default":true,"default":null}],"doc":false},{"name":"rawDump","method":"GET","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"caList","method":"GET","parameters":[],"doc":false},{"name":"userList","method":"GET","parameters":[],"doc":"/**\n     * @return list of users when the logged in user is allowed to query usermanagement\n     */"},{"name":"generateFile","method":"POST","parameters":[{"name":"uuid","has_default":true,"default":null},{"name":"type","has_default":true,"default":"crt"}],"doc":"/**\n     * generate file download content\n     * @param string $uuid certificate reference\n     * @param string $type one of crt/prv/pkcs12,\n     *                  $_POST['password'] my contain an optional password for the pkcs12 format\n     * @return array\n     */"}],"model":"OPNsense\\Trust\\Cert","is_abstract":false,"doc":"/**\n * Class CertController\n * @package OPNsense\\Trust\\Api\n */"},"OPNsense\\Trust\\Api\\CrlController":{"name":"OPNsense\\Trust\\Api\\CrlController","namespace":"OPNsense\\Trust\\Api","parent":"OPNsense\\Base\\ApiControllerBase","methods":[{"name":"search","method":"GET","parameters":[],"doc":false},{"name":"get","method":"GET","parameters":[{"name":"caref","has_default":false,"default":null}],"doc":"/**\n     * fetch (a new) revocation list for a given autority.\n     */"},{"name":"set","method":"GET","parameters":[{"name":"caref","has_default":false,"default":null}],"doc":"/**\n     * set crl for a certificate authority, mimicking standard model operations\n     * (which we can not use due to the nested structure of the CRL's)\n     */"},{"name":"del","method":"GET","parameters":[{"name":"caref","has_default":false,"default":null}],"doc":"/**\n     * drop CRL by certificate reference\n     */"},{"name":"rawDump","method":"GET","parameters":[{"name":"caref","has_default":false,"default":null}],"doc":false},{"name":"getOcspInfoData","method":"GET","parameters":[{"name":"caref","has_default":false,"default":null}],"doc":"/**\n     * for demonstration purposes, we need a CA index file as specified\n     * at https://pki-tutorial.readthedocs.io/en/latest/cadb.html\n     */"}],"model":null,"is_abstract":false,"doc":"/**\n * Class CrlController\n * @package OPNsense\\Trust\\Api\n */"},"OPNsense\\Trust\\Api\\SettingsController":{"name":"OPNsense\\Trust\\Api\\SettingsController","namespace":"OPNsense\\Trust\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"reconfigure","method":"POST","parameters":[],"doc":false}],"model":"OPNsense\\Trust\\General","is_abstract":false,"doc":"/**\n * Class SettingsController\n * @package OPNsense\\Trust\\Api\n */"},"OPNsense\\Unbound\\Api\\DiagnosticsController":{"name":"OPNsense\\Unbound\\Api\\DiagnosticsController","namespace":"OPNsense\\Unbound\\Api","parent":"OPNsense\\Base\\ApiControllerBase","methods":[{"name":"stats","method":"GET","parameters":[],"doc":"/**\n     * reconfigure return the stats\n     */"},{"name":"dumpcache","method":"GET","parameters":[],"doc":"/**\n     * return the entries of the cache\n     */"},{"name":"dumpinfra","method":"GET","parameters":[],"doc":false},{"name":"listlocaldata","method":"GET","parameters":[],"doc":false},{"name":"listlocalzones","method":"GET","parameters":[],"doc":false},{"name":"listinsecure","method":"GET","parameters":[],"doc":false}],"model":null,"is_abstract":false,"doc":"/**\n * Class DiagnosticsextensionController\n * @package OPNsense\\Unbound\\Api\n */"},"OPNsense\\Unbound\\Api\\OverviewController":{"name":"OPNsense\\Unbound\\Api\\OverviewController","namespace":"OPNsense\\Unbound\\Api","parent":"OPNsense\\Base\\ApiControllerBase","methods":[{"name":"isEnabled","method":"GET","parameters":[],"doc":false},{"name":"isBlockListEnabled","method":"GET","parameters":[],"doc":false},{"name":"Rolling","method":"GET","parameters":[{"name":"timeperiod","has_default":false,"default":null},{"name":"clients","has_default":true,"default":"0"}],"doc":false},{"name":"totals","method":"GET","parameters":[{"name":"maximum","has_default":false,"default":null}],"doc":false},{"name":"searchQueries","method":"GET","parameters":[],"doc":false}],"model":null,"is_abstract":false,"doc":false},"OPNsense\\Unbound\\Api\\ServiceController":{"name":"OPNsense\\Unbound\\Api\\ServiceController","namespace":"OPNsense\\Unbound\\Api","parent":"OPNsense\\Base\\ApiMutableServiceControllerBase","methods":[{"name":"start","method":"POST","parameters":[],"doc":"/**\n     * start service\n     * @return array\n     * @throws \\Exception when configd action fails\n     */"},{"name":"stop","method":"POST","parameters":[],"doc":"/**\n     * stop service\n     * @return array\n     * @throws \\Exception when configd actions fails\n     */"},{"name":"restart","method":"POST","parameters":[],"doc":"/**\n     * restart service\n     * @return array\n     * @throws \\Exception\n     */"},{"name":"reconfigure","method":"POST","parameters":[],"doc":"/**\n     * reconfigure with optional stop, generate config and start / reload\n     * @return array response message\n     * @throws \\Exception when configd action fails\n     * @throws \\ReflectionException when model can't be instantiated\n     */"},{"name":"status","method":"GET","parameters":[],"doc":"/**\n     * retrieve status of service\n     * @return array response message\n     * @throws \\Exception when configd action fails\n     */"},{"name":"dnsbl","method":"GET","parameters":[],"doc":false},{"name":"reconfigureGeneral","method":"GET","parameters":[],"doc":"/**\n     * Only used on the general page to account for resolver_configure and dhcp hooks\n     * since these check if unbound is enabled.\n     */"}],"model":null,"is_abstract":false,"doc":false},"OPNsense\\Unbound\\Api\\SettingsController":{"name":"OPNsense\\Unbound\\Api\\SettingsController","namespace":"OPNsense\\Unbound\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"updateBlocklist","method":"POST","parameters":[],"doc":false},{"name":"getNameservers","method":"GET","parameters":[],"doc":false},{"name":"searchForward","method":"*","parameters":[],"doc":false},{"name":"getForward","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"addForward","method":"POST","parameters":[],"doc":false},{"name":"delForward","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"setForward","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"toggleForward","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null},{"name":"enabled","has_default":true,"default":null}],"doc":false},{"name":"searchHostOverride","method":"*","parameters":[],"doc":false},{"name":"getHostOverride","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"addHostOverride","method":"POST","parameters":[],"doc":false},{"name":"delHostOverride","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"setHostOverride","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"toggleHostOverride","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null},{"name":"enabled","has_default":true,"default":null}],"doc":false},{"name":"searchHostAlias","method":"*","parameters":[],"doc":false},{"name":"getHostAlias","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"addHostAlias","method":"POST","parameters":[],"doc":false},{"name":"delHostAlias","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"setHostAlias","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"toggleHostAlias","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null},{"name":"enabled","has_default":true,"default":null}],"doc":false},{"name":"searchAcl","method":"*","parameters":[],"doc":false},{"name":"getAcl","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"addAcl","method":"POST","parameters":[],"doc":false},{"name":"delAcl","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"setAcl","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"toggleAcl","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null},{"name":"enabled","has_default":true,"default":null}],"doc":false}],"model":"\\OPNsense\\Unbound\\Unbound","is_abstract":false,"doc":false},"OPNsense\\Wireguard\\Api\\ClientController":{"name":"OPNsense\\Wireguard\\Api\\ClientController","namespace":"OPNsense\\Wireguard\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"psk","method":"GET","parameters":[],"doc":false},{"name":"listServers","method":"GET","parameters":[],"doc":false},{"name":"searchClient","method":"*","parameters":[],"doc":false},{"name":"getClient","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"addClient","method":"GET","parameters":[],"doc":false},{"name":"delClient","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"setClient","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"toggleClient","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"getClientBuilder","method":"GET","parameters":[],"doc":false},{"name":"addClientBuilder","method":"POST","parameters":[],"doc":false},{"name":"getServerInfo","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false}],"model":"\\OPNsense\\Wireguard\\Client","is_abstract":false,"doc":false},"OPNsense\\Wireguard\\Api\\GeneralController":{"name":"OPNsense\\Wireguard\\Api\\GeneralController","namespace":"OPNsense\\Wireguard\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"}],"model":"\\OPNsense\\Wireguard\\General","is_abstract":false,"doc":false},"OPNsense\\Wireguard\\Api\\ServerController":{"name":"OPNsense\\Wireguard\\Api\\ServerController","namespace":"OPNsense\\Wireguard\\Api","parent":"OPNsense\\Base\\ApiMutableModelControllerBase","methods":[{"name":"get","method":"GET","parameters":[],"doc":"/**\n     * Retrieve model settings\n     * @return array settings\n     * @throws \\ReflectionException when not bound to a valid model\n     */"},{"name":"set","method":"POST","parameters":[],"doc":"/**\n     * Update model settings\n     * @return array status / validation errors\n     * @throws \\OPNsense\\Base\\ValidationException on validation issues\n     * @throws \\ReflectionException when binding to the model class fails\n     * @throws UserException when denied write access\n     */"},{"name":"keyPair","method":"GET","parameters":[],"doc":false},{"name":"searchServer","method":"*","parameters":[],"doc":false},{"name":"getServer","method":"GET","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"addServer","method":"POST","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"delServer","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false},{"name":"setServer","method":"POST","parameters":[{"name":"uuid","has_default":true,"default":null}],"doc":false},{"name":"toggleServer","method":"POST","parameters":[{"name":"uuid","has_default":false,"default":null}],"doc":false}],"model":"\\OPNsense\\Wireguard\\Server","is_abstract":false,"doc":false},"OPNsense\\Wireguard\\Api\\ServiceController":{"name":"OPNsense\\Wireguard\\Api\\ServiceController","namespace":"OPNsense\\Wireguard\\Api","parent":"OPNsense\\Base\\ApiMutableServiceControllerBase","methods":[{"name":"start","method":"POST","parameters":[],"doc":"/**\n     * start service\n     * @return array\n     * @throws \\Exception when configd action fails\n     */"},{"name":"stop","method":"POST","parameters":[],"doc":"/**\n     * stop service\n     * @return array\n     * @throws \\Exception when configd actions fails\n     */"},{"name":"restart","method":"POST","parameters":[],"doc":"/**\n     * restart service\n     * @return array\n     * @throws \\Exception\n     */"},{"name":"reconfigure","method":"POST","parameters":[],"doc":"/**\n     * reconfigure with optional stop, generate config and start / reload\n     * @return array response message\n     * @throws \\Exception when configd action fails\n     * @throws \\ReflectionException when model can't be instantiated\n     */"},{"name":"status","method":"GET","parameters":[],"doc":"/**\n     * retrieve status of service\n     * @return array response message\n     * @throws \\Exception when configd action fails\n     */"},{"name":"reconfigure","method":"POST","parameters":[],"doc":"/**\n     * @return array\n     */"},{"name":"show","method":"GET","parameters":[],"doc":"/**\n     * wg show all dump output\n     * @return array\n     */"}],"model":null,"is_abstract":false,"doc":"/**\n * Class ServiceController\n * @package OPNsense\\Wireguard\n */"}}
