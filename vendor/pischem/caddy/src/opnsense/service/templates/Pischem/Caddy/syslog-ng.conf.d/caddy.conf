###################################################################
# Local syslog-ng configuration [caddy].
###################################################################
# DO NOT EDIT THIS FILE -- OPNsense auto-generated file
#
# Define Unix socket source for Caddy
source s_caddy {
    unix-dgram("/var/caddy/var/run/log");
};

# Parser for Caddy log levels
parser p_caddy_levels {
    channel {
        filter {
            message(".*debug.*") or
            message(".*info.*") or
            message(".*warn.*") or
            message(".*error.*") or
            message(".*panic.*") or
            message(".*fatal.*");
        };
        rewrite {
            set-severity("7" condition(message(".*debug.*")));  # DEBUG -> Debug
            set-severity("6" condition(message(".*info.*")));   # INFO -> Informational
            set-severity("4" condition(message(".*warn.*")));   # WARN -> Warning
            set-severity("3" condition(message(".*error.*")));  # ERROR -> Error
            set-severity("2" condition(message(".*panic.*")));  # PANIC -> Critical
            set-severity("1" condition(message(".*fatal.*")));  # FATAL -> Alert
        };
    };
};

# Destination for Caddy logs
destination d_local_caddy {
    file(
        "/var/log/caddy/caddy_${YEAR}${MONTH}${DAY}.log"
        create-dirs(yes)
        flags(syslog-protocol)
    );
};

# Log path for processing Caddy logs
log {
    source(s_caddy);
    parser(p_caddy_levels);
    rewrite { set("caddy" value("PROGRAM")); };
    destination(d_local_caddy);
};
