{% if helpers.exists('OPNsense.quagga.bgp.enabled') and OPNsense.quagga.bgp.enabled == '1' %}
{% from 'OPNsense/Macros/interface.macro' import physical_interface %}
!
! Zebra configuration saved from vty
!   2017/03/03 20:21:04
!
!
!
!
{% if helpers.exists('OPNsense.quagga.bgp.asnumber') and OPNsense.quagga.bgp.asnumber != '' %}
router bgp {{ OPNsense.quagga.bgp.asnumber }}
{%   if helpers.exists('OPNsense.quagga.bgp.networks') %}
{%     for network in OPNsense.quagga.bgp.networks.split(',') %}
 network {{ network }}
{%     endfor %}
{%   endif %}
{%   if helpers.exists('OPNsense.quagga.bgp.neighbors.neighbor') %}
{%     for neighbor in helpers.toList('OPNsense.quagga.bgp.neighbors.neighbor') %}
{%       if neighbor.enabled == '1' %}
 neighbor {{ neighbor.address }} remote-as {{ neighbor.remoteas }}
{%         if 'updatesource' in neighbor and neighbor.updatesource != '' %}
 neighbor {{ neighbor.address }} update-source {{ physical_interface(neighbor.updatesource) }}
{%         endif %}
{%         if 'nexthopself' in neighbor and neighbor.nexthopself == '1' %}
 neighbor {{ neighbor.address }} next-hop-self
{%         endif %}
{%         if 'defaultoriginate' in neighbor and neighbor.defaultoriginate == '1' %}
 neighbor {{ neighbor.address }} default-originate
{%         endif %}
{%         if neighbor.linkedPrefixlistIn|default("") != "" %}
{%           for prefixlist in neighbor.linkedPrefixlistIn.split(",") %}
{%             set prefixlist2_data = helpers.getUUID(prefixlist) %}
{%             if prefixlist2_data != '' %}
 neighbor {{ neighbor.address }} prefix-list {{ prefixlist2_data.name }} in 
{%             endif %}
{%           endfor %}
{%         endif %}
{%         if neighbor.linkedPrefixlistOut|default("") != "" %}
{%           for prefixlist in neighbor.linkedPrefixlistOut.split(",") %}
{%             set prefixlist_data = helpers.getUUID(prefixlist) %}
{%             if prefixlist_data != '' %}
 neighbor {{ neighbor.address }} prefix-list {{ prefixlist_data.name }} out 
{%             endif %}
{%           endfor %}
{%         endif %}
{%         if neighbor.linkedRoutemapIn|default("") != "" %}
{%           for aspath in neighbor.linkedRoutemapIn.split(",") %}
{%             set routemap2_data = helpers.getUUID(aspath) %}
{%             if routemap2_data != '' %}
 neighbor {{ neighbor.address }} route-map {{ routemap2_data.name }} in 
{%             endif %}
{%           endfor %}
{%         endif %}
{%         if neighbor.linkedRoutemapOut|default("") != "" %}
{%           for aspath in neighbor.linkedRoutemapOut.split(",") %}
{%             set routemap_data = helpers.getUUID(aspath) %}
{%             if routemap_data != '' %}
 neighbor {{ neighbor.address }} route-map {{ routemap_data.name }} out 
{%             endif %}
{%           endfor %}
{%         endif %}
{%       endif %}
{%     endfor %}
{%   endif %}
!
{%   if helpers.exists('OPNsense.quagga.bgp.prefixlists.prefixlist') %}
{%     for prefixlist in helpers.sortDictList(OPNsense.quagga.bgp.prefixlists.prefixlist, 'name', 'seqnumber' ) %}
{%       if prefixlist.enabled == '1' %}
ip prefix-list {{ prefixlist.name }} seq {{ prefixlist.seqnumber }} {{ prefixlist.action }} {{ prefixlist.network }}
{%       endif %}
{%     endfor %}
{%   endif %}
!
{%   if helpers.exists('OPNsense.quagga.bgp.aspaths.aspath') %}
{%     for aspath in helpers.sortDictList(OPNsense.quagga.bgp.aspaths.aspath, 'number') %}
{%       if aspath.enabled == '1' %}
ip as-path access-list {{ aspath.number }} {{ aspath.action }} {{ aspath.as }}
{%       endif %}
{%     endfor %}
{%   endif %}
! 
{%   if helpers.exists('OPNsense.quagga.bgp.routemaps.routemap') %}
{%     for routemap in helpers.sortDictList(OPNsense.quagga.bgp.routemaps.routemap, 'name') %}
{%       if routemap.enabled == '1' %}
route-map {{ routemap.name }} {{ routemap.name }} {{ routemap.name }}
{%   if helpers.exists('OPNsense.quagga.bgp.rmatches.rmatch') %}
{%     for rmatch in helpers.sortDictList(OPNsense.quagga.bgp.rmatches.rmatch, 'name') %}
{%       if rmatch.enabled == '1' %}
{%         if rmatch.match|default("") != "" %}
{%           for aspath in rmatch.match.split(",") %}
{%             set aspath_data = helpers.getUUID(aspath) %}
{%             if 'match' in rmatch and routemap.match != '' %}
 match as-path {{ aspath_data.number }}
{%             endif %}
{%           endfor %}
{%         endif %}
{%       endif %}
{%     endfor %}
{%   endif %}
{%   if helpers.exists('OPNsense.quagga.bgp.rsets.rset') %}
{%     for rset in helpers.sortDictList(OPNsense.quagga.bgp.rsets.rset, 'set') %}
{%       if rset.enabled == '1' %}
{%         if rset.set|default("") != "" %}
{%           for set in rset.set.split(",") %}
{%             set set_data = helpers.getUUID(rset) %}
{%             if 'set' in rset and rset.set != '' %}
 set {{ set_data.set }}
{%             endif %}
{%           endfor %}
{%         endif %}
{%       endif %}
{%     endfor %}
{%   endif %}
{%       endif %}
{%     endfor %}
{%   endif %}
!
{% endif %}
!
line vty
!
{% endif %}
