{% if helpers.exists('OPNsense.quagga.bgp.enabled') and OPNsense.quagga.bgp.enabled == '1' %}
{% from 'OPNsense/Macros/interface.macro' import physical_interface %}
!
! Zebra configuration saved from vty
!   2017/03/03 20:21:04
!
!
!
!
{% if helpers.exists('OPNsense.quagga.bgp.asnumber') and OPNsense.quagga.bgp.asnumber != '' %}
router bgp {{ OPNsense.quagga.bgp.asnumber }}
{%   if helpers.exists('OPNsense.quagga.bgp.networks') %}
{%     for network in OPNsense.quagga.bgp.networks.split(',') %}
 network {{ network }}
{%     endfor %}
{%   endif %}
{%   if helpers.exists('OPNsense.quagga.bgp.neighbors.neighbor') %}
{%     for neighbor in helpers.toList('OPNsense.quagga.bgp.neighbors.neighbor') %}
{%       if neighbor.enabled == '1' %}
 neighbor {{ neighbor.address }} remote-as {{ neighbor.remoteas }}
{%         if 'updatesource' in neighbor and neighbor.updatesource != '' %}
 neighbor {{ neighbor.address }} update-source {{ physical_interface(neighbor.updatesource) }}
{%         endif %}
{%         if 'nexthopself' in neighbor and neighbor.nexthopself == '1' %}
 neighbor {{ neighbor.address }} next-hop-self
{%         endif %}
{%         if 'defaultoriginate' in neighbor and neighbor.defaultoriginate == '1' %}
 neighbor {{ neighbor.address }} default-originate
{%         endif %}
{%         if neighbor.linkedPrefixlistIn|default("") != "" %}
{%           for prefixlist in neighbor.linkedPrefixlistIn.split(",") %}
{%             set prefixlist2_data = helpers.getUUID(prefixlist) %}
{%             if prefixlist2_data != '' %}
 neighbor {{ neighbor.address }} prefix-list {{ prefixlist2_data.name }} in
{%             endif %}
{%           endfor %}
{%         endif %}
{%         if neighbor.linkedPrefixlistOut|default("") != "" %}
{%           for prefixlist in neighbor.linkedPrefixlistOut.split(",") %}
{%             set prefixlist_data = helpers.getUUID(prefixlist) %}
{%             if prefixlist_data != '' %}
 neighbor {{ neighbor.address }} prefix-list {{ prefixlist_data.name }} out
{%             endif %}
{%           endfor %}
{%         endif %}
{%         if neighbor.linkedRoutemapIn|default("") != "" %}
{%           for aspath in neighbor.linkedRoutemapIn.split(",") %}
{%             set routemap2_data = helpers.getUUID(aspath) %}
{%             if routemap2_data != '' %}
 neighbor {{ neighbor.address }} route-map {{ routemap2_data.name }} in
{%             endif %}
{%           endfor %}
{%         endif %}
{%         if neighbor.linkedRoutemapOut|default("") != "" %}
{%           for aspath in neighbor.linkedRoutemapOut.split(",") %}
{%             set routemap_data = helpers.getUUID(aspath) %}
{%             if routemap_data != '' %}
 neighbor {{ neighbor.address }} route-map {{ routemap_data.name }} out
{%             endif %}
{%           endfor %}
{%         endif %}
{%       endif %}
{%     endfor %}
{%   endif %}
!
{%   if helpers.exists('OPNsense.quagga.bgp.prefixlists.prefixlist') %}
{%     for prefixlist in helpers.sortDictList(OPNsense.quagga.bgp.prefixlists.prefixlist, 'name', 'seqnumber' ) %}
{%       if prefixlist.enabled == '1' %}
ip prefix-list {{ prefixlist.name }} seq {{ prefixlist.seqnumber }} {{ prefixlist.action }} {{ prefixlist.network }}
{%       endif %}
{%     endfor %}
{%   endif %}
!
{%   if helpers.exists('OPNsense.quagga.bgp.routemaps.routemap') %}
{%     for routemap in helpers.sortDictList(OPNsense.quagga.bgp.routemaps.routemap, 'name' ) %}
{%       if routemap.enabled == '1' %}
{%         for linkedmatch in routemap.linkedmatch.split(",") %}
{%           set linkedmatch_data =  helpers.getUUID(linkedmatch) %}
route-map {{ routemap.name }} {{ linkedmatch_data.action }} {{ linkedmatch_data.id }}
{%           if routemap.linkedmatch|default("") != "" %}
{%             if helpers.exists('OPNsense.quagga.bgp.rmatches.rmatch') %}
{#               for rmatch in helpers.toList('OPNsense.quagga.bgp.rmatches.rmatch') #}
{%                 set rmatch = helpers.getUUID(linkedmatch_data.match) %}
{%                 if 'linkedmatch' in routemap and routemap.linkedmatch != '' %}
{#                 if rmatch|default("") != "" #}
 match as-path {{ rmatch.number }}
{%                 endif %}
{#               endfor #}
{%             endif %}
{%           endif %}
{%         endfor %}
{%         set rset = helpers.getUUID(routemap.linkedset) %}
{%         if routemap.linkedset != '' %}
 set {{ rset.set }}
{%         endif %}
{%       endif %}
{%     endfor %}
{%   endif %}
{% endif %}
!
{% endif %}
!
line vty
!
{% endif %}
