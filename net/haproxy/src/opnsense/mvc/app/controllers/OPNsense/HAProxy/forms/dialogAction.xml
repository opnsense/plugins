<form>
    <field>
        <id>action.name</id>
        <label>Name</label>
        <type>text</type>
        <help>Name to identify this rule.</help>
    </field>
    <field>
        <id>action.description</id>
        <label>Description</label>
        <type>text</type>
        <help>Description for this rule.</help>
    </field>
    <field>
        <label>Optional condition</label>
        <type>header</type>
    </field>
    <field>
        <id>action.testType</id>
        <label>Test type</label>
        <type>dropdown</type>
        <help><![CDATA[Choose how to test. By using IF it tests if the condition evaluates to true. If you use UNLESS, the sense of the test is reversed.]]></help>
    </field>
    <field>
        <id>action.linkedAcls</id>
        <label>Select conditions</label>
        <type>select_multiple</type>
        <help><![CDATA[Select one or more conditions to be used for this rule.]]></help>
    </field>
    <field>
        <id>action.operator</id>
        <label>Logical operator for conditions</label>
        <type>dropdown</type>
        <help><![CDATA[Choose a logical operator.]]></help>
    </field>
    <field>
        <label>HAProxy function</label>
        <type>header</type>
    </field>
    <field>
        <id>action.type</id>
        <label>Execute function</label>
        <type>dropdown</type>
        <help><![CDATA[Choose a HAProxy function that should be executed if the condition evaluates to true.]]></help>
    </field>
    <field>
        <label>Parameters</label>
        <type>header</type>
        <style>type_table table_use_backend</style>
    </field>
    <field>
        <id>action.use_backend</id>
        <label>Use backend pool</label>
        <type>dropdown</type>
        <help><![CDATA[HAProxy will use this backend pool if the condition evaluates to true.]]></help>
    </field>
    <field>
        <label>Parameters</label>
        <type>header</type>
        <style>type_table table_use_server</style>
    </field>
    <field>
        <id>action.use_server</id>
        <label>Use server</label>
        <type>dropdown</type>
        <help><![CDATA[HAProxy will use this server instead of other servers that are specified in the Backend Pool. The server must exist in the context where this rule is applied.]]></help>
    </field>
    <field>
        <label>NOTE: The specified server must be present in the Backend Pool where this rule is applied.</label>
        <type>info</type>
    </field>
    <field>
        <label>Parameters</label>
        <type>header</type>
        <style>type_table table_http-request_auth</style>
    </field>
    <field>
        <id>action.http_request_auth</id>
        <label>Auth Realm</label>
        <type>text</type>
        <help><![CDATA[When HAProxy requests user name and password from the user, this optional authentication realm is returned with the response (typically the application's name).]]></help>
    </field>
    <field>
        <label>Parameters</label>
        <type>header</type>
        <style>type_table table_http-request_redirect</style>
    </field>
    <field>
        <id>action.http_request_redirect</id>
        <label>HTTP Redirect</label>
        <type>text</type>
        <help><![CDATA[Use HAProxy's redirect function to return a HTTP redirection. See <a href="http://cbonte.github.io/haproxy-dconv/2.2/configuration.html#redirect">HAProxy's documentation</a> for further details and examples.]]></help>
    </field>
    <field>
        <label>Parameters</label>
        <type>header</type>
        <style>type_table table_http-request_lua</style>
    </field>
    <field>
        <id>action.http_request_lua</id>
        <label>Lua function</label>
        <type>text</type>
        <help><![CDATA[Execute the specified Lua function. You will most likely need to include/load your Lua code first.]]></help>
    </field>
    <field>
        <label>Parameters</label>
        <type>header</type>
        <style>type_table table_http-request_use-service</style>
    </field>
    <field>
        <id>action.http_request_use_service</id>
        <label>Lua service</label>
        <type>text</type>
        <help><![CDATA[Register the specified Lua service. You will most likely need to include/load your Lua code first.]]></help>
    </field>
    <field>
        <label>Parameters</label>
        <type>header</type>
        <style>type_table table_http-request_add-header</style>
    </field>
    <field>
        <id>action.http_request_add_header_name</id>
        <label>HTTP Header</label>
        <type>text</type>
        <help><![CDATA[Append a HTTP header field with the specified name.]]></help>
    </field>
    <field>
        <id>action.http_request_add_header_content</id>
        <label>Header Content</label>
        <type>text</type>
        <help><![CDATA[The value that should be set for the specified HTTP header. Note that it is possible to use pre-defined variables, see <a href="http://cbonte.github.io/haproxy-dconv/2.2/configuration.html#8.2.4">HAProxy's documentation</a> for further details and examples.]]></help>
    </field>
    <field>
        <label>Parameters</label>
        <type>header</type>
        <style>type_table table_http-request_set-header</style>
    </field>
    <field>
        <id>action.http_request_set_header_name</id>
        <label>HTTP Header</label>
        <type>text</type>
        <help><![CDATA[Remove the HTTP header field with the specified name and add a new one with the same name. This is useful when passing security information to the server, where the header must not be manipulated by external users.]]></help>
    </field>
    <field>
        <id>action.http_request_set_header_content</id>
        <label>Header Content</label>
        <type>text</type>
        <help><![CDATA[The value that should be set for the specified HTTP header. Note that it's possible to use pre-defined variables, see <a href="http://cbonte.github.io/haproxy-dconv/2.2/configuration.html#8.2.4">HAProxy's documentation</a> for further details and examples.]]></help>
    </field>
    <field>
        <label>Parameters</label>
        <type>header</type>
        <style>type_table table_http-request_del-header</style>
    </field>
    <field>
        <id>action.http_request_del_header_name</id>
        <label>HTTP Header</label>
        <type>text</type>
        <help><![CDATA[Remove the HTTP header field with the specified name.]]></help>
    </field>
    <field>
        <label>Parameters</label>
        <type>header</type>
        <style>type_table table_http-request_replace-header</style>
    </field>
    <field>
        <id>action.http_request_replace_header_name</id>
        <label>HTTP Header</label>
        <type>text</type>
        <help><![CDATA[The name of the HTTP header field.]]></help>
    </field>
    <field>
        <id>action.http_request_replace_header_regex</id>
        <label>Regular Expression</label>
        <type>text</type>
        <help><![CDATA[Matches the specified regular expression in all occurrences of the header field.]]></help>
    </field>
    <field>
        <label>Parameters</label>
        <type>header</type>
        <style>type_table table_http-request_replace-value</style>
    </field>
    <field>
        <id>action.http_request_replace_value_name</id>
        <label>HTTP Header</label>
        <type>text</type>
        <help><![CDATA[The name of the HTTP header field.]]></help>
    </field>
    <field>
        <id>action.http_request_replace_value_regex</id>
        <label>Regular Expression</label>
        <type>text</type>
        <help><![CDATA[This is suited for all header fields which are allowed to carry more than one value: Matches the specified regular expression against every comma-delimited value of the header field.]]></help>
    </field>
    <field>
        <label>Parameters</label>
        <type>header</type>
        <style>type_table table_http-request_set-path</style>
    </field>
    <field>
        <id>action.http_request_set_path</id>
        <label>Set Path</label>
        <type>text</type>
        <help><![CDATA[Rewrites the request path. The query string, if any, is left intact. If a scheme and authority is found before the path, they are left intact as well.]]></help>
    </field>
    <field>
        <label>Parameters</label>
        <type>header</type>
        <style>type_table table_http-request_set-var</style>
    </field>
    <field>
        <id>action.http_request_set_var_scope</id>
        <label>Variable Scope</label>
        <type>dropdown</type>
        <help><![CDATA[The name of the variable starts with an indication about its scope.]]></help>
    </field>
    <field>
        <id>action.http_request_set_var_name</id>
        <label>Variable Name</label>
        <type>text</type>
    </field>
    <field>
        <id>action.http_request_set_var_expr</id>
        <label>Expression</label>
        <type>text</type>
        <help><![CDATA[A standard HAProxy expression formed by a sample-fetch followed by some converters.]]></help>
    </field>
    <field>
        <label>Parameters</label>
        <type>header</type>
        <style>type_table table_http-response_lua</style>
    </field>
    <field>
        <id>action.http_response_lua</id>
        <label>Lua function</label>
        <type>text</type>
        <help><![CDATA[Execute the specified Lua function. You will most likely need to include/load your Lua code first.]]></help>
    </field>
    <field>
        <label>Parameters</label>
        <type>header</type>
        <style>type_table table_http-response_add-header</style>
    </field>
    <field>
        <id>action.http_response_add_header_name</id>
        <label>HTTP Header</label>
        <type>text</type>
        <help><![CDATA[Append a HTTP header field with the specified name.]]></help>
    </field>
    <field>
        <id>action.http_response_add_header_content</id>
        <label>Header Content</label>
        <type>text</type>
        <help><![CDATA[The value that should be set for the specified HTTP header. Note that it's possible to use pre-defined variables, see <a href="http://cbonte.github.io/haproxy-dconv/2.2/configuration.html#8.2.4">HAProxy's documentation</a> for further details and examples.]]></help>
    </field>
    <field>
        <label>Parameters</label>
        <type>header</type>
        <style>type_table table_http-response_set-header</style>
    </field>
    <field>
        <id>action.http_response_set_header_name</id>
        <label>HTTP Header</label>
        <type>text</type>
        <help><![CDATA[Remove the HTTP header field with the specified name and add a new one with the same name. This is useful when passing security information to the server, where the header must not be manipulated by external users.]]></help>
    </field>
    <field>
        <id>action.http_response_set_header_content</id>
        <label>Header Content</label>
        <type>text</type>
        <help><![CDATA[The value that should be set for the specified HTTP header. Note that it's possible to use pre-defined variables, see <a href="http://cbonte.github.io/haproxy-dconv/2.2/configuration.html#8.2.4">HAProxy's documentation</a> for further details and examples.]]></help>
    </field>
    <field>
        <label>Parameters</label>
        <type>header</type>
        <style>type_table table_http-response_del-header</style>
    </field>
    <field>
        <id>action.http_response_del_header_name</id>
        <label>HTTP Header</label>
        <type>text</type>
        <help><![CDATA[Remove the HTTP header field with the specified name.]]></help>
    </field>
    <field>
        <label>Parameters</label>
        <type>header</type>
        <style>type_table table_http-response_replace-header</style>
    </field>
    <field>
        <id>action.http_response_replace_header_name</id>
        <label>HTTP Header</label>
        <type>text</type>
        <help><![CDATA[The name of the HTTP header field.]]></help>
    </field>
    <field>
        <id>action.http_response_replace_header_regex</id>
        <label>Regular Expression</label>
        <type>text</type>
        <help><![CDATA[Matches the specified regular expression in all occurrences of header field.]]></help>
    </field>
    <field>
        <label>Parameters</label>
        <type>header</type>
        <style>type_table table_http-response_replace-value</style>
    </field>
    <field>
        <id>action.http_response_replace_value_name</id>
        <label>HTTP Header</label>
        <type>text</type>
        <help><![CDATA[The name of the HTTP header field.]]></help>
    </field>
    <field>
        <id>action.http_response_replace_value_regex</id>
        <label>Regular Expression</label>
        <type>text</type>
        <help><![CDATA[This is suited for all header fields which are allowed to carry more than one value: Matches the specified regular expression against every comma-delimited value of the header field.]]></help>
    </field>
    <field>
        <label>Parameters</label>
        <type>header</type>
        <style>type_table table_http-response_set-status</style>
    </field>
    <field>
        <id>action.http_response_set_status_code</id>
        <label>HTTP Status Code</label>
        <type>text</type>
        <help><![CDATA[Replaces the response status code. Must be an integer between 100 and 999.]]></help>
    </field>
    <field>
        <id>action.http_response_set_status_reason</id>
        <label>HTTP Reason Text</label>
        <type>text</type>
        <help><![CDATA[An optional custom reason text for the HTTP status code. If empty the default reason for the specified code will be used.]]></help>
    </field>
    <field>
        <label>Parameters</label>
        <type>header</type>
        <style>type_table table_http-response_set-var</style>
    </field>
    <field>
        <id>action.http_response_set_var_scope</id>
        <label>Variable Scope</label>
        <type>dropdown</type>
        <help><![CDATA[The name of the variable starts with an indication about its scope.]]></help>
    </field>
    <field>
        <id>action.http_response_set_var_name</id>
        <label>Variable Name</label>
        <type>text</type>
    </field>
    <field>
        <id>action.http_response_set_var_expr</id>
        <label>Expression</label>
        <type>text</type>
        <help><![CDATA[A standard HAProxy expression formed by a sample-fetch followed by some converters.]]></help>
    </field>
    <field>
        <label>Parameters</label>
        <type>header</type>
        <style>type_table table_tcp-request_content_lua</style>
    </field>
    <field>
        <id>action.tcp_request_content_lua</id>
        <label>Lua function</label>
        <type>text</type>
        <help><![CDATA[Execute the specified Lua function. You will most likely need to include/load your Lua code first.]]></help>
    </field>
    <field>
        <label>Parameters</label>
        <type>header</type>
        <style>type_table table_tcp-request_content_use-service</style>
    </field>
    <field>
        <id>action.tcp_request_content_use_service</id>
        <label>Lua service</label>
        <type>text</type>
        <help><![CDATA[Register the specified Lua service. You will most likely need to include/load your Lua code first.]]></help>
    </field>
    <field>
        <label>Parameters</label>
        <type>header</type>
        <style>type_table table_tcp-request_inspect-delay</style>
    </field>
    <field>
        <id>action.tcp_request_inspect_delay</id>
        <label>TCP inspection delay</label>
        <type>text</type>
        <help><![CDATA[Set the maximum allowed time to wait for data during content inspection. Defaults to milliseconds. You may also enter a number followed by one of the supported suffixes "d" (days), "h" (hour), "m" (minute), "s" (seconds), "ms" (miliseconds).]]></help>
    </field>
    <field>
        <label>Parameters</label>
        <type>header</type>
        <style>type_table table_tcp-response_content_lua</style>
    </field>
    <field>
        <id>action.tcp_response_content_lua</id>
        <label>Lua function</label>
        <type>text</type>
        <help><![CDATA[Execute the specified Lua function. You will most likely need to include/load your Lua code first.]]></help>
    </field>
    <field>
        <label>Parameters</label>
        <type>header</type>
        <style>type_table table_tcp-response_inspect-delay</style>
    </field>
    <field>
        <id>action.tcp_response_inspect_delay</id>
        <label>TCP inspection delay</label>
        <type>text</type>
        <help><![CDATA[Set the maximum allowed time to wait for a response during content inspection. Defaults to milliseconds. You may also enter a number followed by one of the supported suffixes "d" (days), "h" (hour), "m" (minute), "s" (seconds), "ms" (miliseconds).]]></help>
    </field>
    <field>
        <label>Parameters</label>
        <type>header</type>
        <style>type_table table_custom</style>
    </field>
    <field>
        <id>action.custom</id>
        <label>Option pass-through</label>
        <type>textbox</type>
        <help><![CDATA[Specify a HAProxy rule/ACL that is currently not supported by the GUI.]]></help>
    </field>
    <field>
        <label>Parameters</label>
        <type>header</type>
        <style>type_table table_map_use_backend</style>
    </field>
    <field>
        <id>action.map_use_backend_file</id>
        <label>Map file</label>
        <type>dropdown</type>
        <help><![CDATA[HAProxy will extract the Host header from the HTTP request and search the map file for a match. If a match is found, the backend pool from the map file will be used.]]></help>
    </field>
    <field>
        <id>action.map_use_backend_default</id>
        <label>Default backend pool</label>
        <type>dropdown</type>
        <help><![CDATA[HAProxy will use this backend pool if no match is found in the map file.]]></help>
    </field>
</form>
