<form>
    <field>
        <label>Service</label>
        <type>header</type>
    </field>
    <field>
        <id>haproxy.general.enabled</id>
        <label>Enable HAProxy</label>
        <type>checkbox</type>
        <help>Enable or disable the HAProxy service.</help>
    </field>
    <field>
        <id>haproxy.general.gracefulStop</id>
        <label>Graceful stop</label>
        <type>checkbox</type>
        <help><![CDATA[Enable HAProxy's graceful stop mode. In this mode HAProxy will continue to process existing connections until they close. Note that this may severely slow down HAProxy's shutdown, depending on the configured timeout values. If graceful stop mode is not enabled, HAProxy will use the hard stop mode where it immediately quits and all established connections are closed. Hard stop mode is recommended.]]></help>
    </field>
    <field>
        <id>haproxy.general.hardStopAfter</id>
        <label>Graceful stop timeout</label>
        <type>text</type>
        <help><![CDATA[Set the maximum time allowed to perform a clean graceful stop. HAProxy will terminate all open connections when the timeout is reached. This may be used to ensure that the instance will quit even if connections remain opened. Defaults to milliseconds. Optionally the unit may be specified as either "d", "h", "m", "s", "ms" or "us".]]></help>
    </field>
    <field>
        <id>haproxy.general.seamlessReload</id>
        <label>Seamless reload</label>
        <type>checkbox</type>
        <help><![CDATA[HAProxy will handle service restarts in a way that no connections are dropped. This is the best restart mode, because it has no impact on user experience. That being said, there might be edge cases where seamless reloads lead to unexpected behaviour.]]></help>
    </field>
    <field>
        <id>haproxy.general.storeOcsp</id>
        <label>Store OCSP responses</label>
        <type>checkbox</type>
        <help><![CDATA[Retrieve OCSP data everytime when starting or restarting HAProxy. For every certificate, the OCSP response will be fetched and stored in filesystem, and automatically picked-up by HAProxy on startup. However, depending on the number of certificates and other circumstances, this may noticeably increase the time required to start/restart the HAProxy service. Note that this only updates the OCSP responses once during start/restart, you need to setup a cron job to periodically update this data too.]]></help>
    </field>
    <field>
        <id>haproxy.general.showIntro</id>
        <label>Show introduction pages</label>
        <type>checkbox</type>
        <help><![CDATA[Uncheck to hide all additional introduction pages. Requires a manual page reload for the change to take effect.]]></help>
    </field>
</form>
