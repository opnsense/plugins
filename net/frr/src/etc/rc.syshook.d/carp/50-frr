#!/usr/local/bin/php
<?php

/*
 * Copyright (C) 2018 Franco Fichtner <franco@opnsense.org>
 * Copyright (C) 2004 Scott Ullrich <sullrich@gmail.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 * AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
 * OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

require_once('config.inc');
require_once('util.inc');
require_once('plugins.inc.d/frr.inc');

if (frr_carp_enabled()) {
    // XXX: carp enable/disable mode
    $subsystem = !empty($argv[1]) ? $argv[1] : '';
    $type = !empty($argv[2]) ? $argv[2] : '';

    if ($type != 'MASTER' && $type != 'BACKUP') {
        log_error("Carp '$type' event unknown from source '{$subsystem}'");
        exit(1);
    }

    if (!strstr($subsystem, '@')) {
        log_error("Carp '$type' event triggered from wrong source '{$subsystem}'");
        exit(1);
    }

    switch ($type) {
        case 'MASTER':
            shell_exec('/usr/local/etc/rc.d/frr start');
            break;
        case 'BACKUP':
            shell_exec('/usr/local/etc/rc.d/frr stop');
            break;
    }
} elseif (frr_enabled()) {
    // XXX: when not toggling between active and disabled, pass event so underlaying protocols can
    //      determine which actions to perform when reaching a certain state.
    shell_exec('/usr/local/opnsense/scripts/frr/carp_event_handler');
}
